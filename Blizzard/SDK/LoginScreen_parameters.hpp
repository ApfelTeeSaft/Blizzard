#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LoginScreen

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function LoginScreen.LoginScreen_C.ExecuteUbergraph_LoginScreen
// 0x01C8 (0x01C8 - 0x0000)
struct LoginScreen_C_ExecuteUbergraph_LoginScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSuccessful;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_EULAText;                       // 0x0008(0x0018)()
	TDelegate<void(bool bSuccessful, class FText EULAText)> K2Node_CreateDelegate_OutputDelegate;    // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class AFort_Entry_Music_Controller_BP_C*> CallFunc_GetAllActorsOfClass_OutActors;         // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetEULAText_ReturnValue;                  // 0x0050(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasEULADownloaded_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortUIState                                  K2Node_Event_PreviousUIState;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFort_Entry_Music_Controller_BP_C*      CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_StatusText;                     // 0x0088(0x0018)()
	class FText                                   K2Node_CustomEvent_FailReason;                     // 0x00A0(0x0018)()
	bool                                          CallFunc_StartAutoLogin_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Event_Widget1;                              // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContentPushState                      K2Node_Event_State;                                // 0x00C8(0x0003)(NoDestructor)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWidget* WebWidget)>     K2Node_CreateDelegate_OutputDelegate12;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue1;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue1;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bLinkedAccountNeedsPurchase;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue12;                 // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_Reason;                               // 0x0110(0x0018)(ConstParm)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue123;                // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShow;                                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Tile;                                 // 0x0138(0x0018)(ConstParm)
	class FText                                   K2Node_Event_Body;                                 // 0x0150(0x0018)(ConstParm)
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMOTD_C*                                CallFunc_Create_ReturnValue;                       // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLoggedIn_ReturnValue;                   // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate123;           // 0x0188(0x0010)(ZeroConstructor, NoDestructor)
	class UWidget*                                K2Node_CustomEvent_WebWidget;                      // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CloseWebLogin_bWasClosed;                 // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Event_Widget;                               // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIState                                  K2Node_Event_NextUIState;                          // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue1234;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoginScreen_C_ExecuteUbergraph_LoginScreen) == 0x000008, "Wrong alignment on LoginScreen_C_ExecuteUbergraph_LoginScreen");
static_assert(sizeof(LoginScreen_C_ExecuteUbergraph_LoginScreen) == 0x0001C8, "Wrong size on LoginScreen_C_ExecuteUbergraph_LoginScreen");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, EntryPoint) == 0x000000, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_CustomEvent_bSuccessful) == 0x000004, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_CustomEvent_bSuccessful' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_CustomEvent_EULAText) == 0x000008, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_CustomEvent_EULAText' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_GetContext_ReturnValue) == 0x000048, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_GetEULAText_ReturnValue) == 0x000050, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_GetEULAText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_CreateDelegate_OutputDelegate1) == 0x000068, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_HasEULADownloaded_ReturnValue) == 0x000078, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_HasEULADownloaded_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_Event_PreviousUIState) == 0x000079, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_Event_PreviousUIState' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_Array_Get_Item) == 0x000080, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_CustomEvent_StatusText) == 0x000088, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_CustomEvent_StatusText' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_CustomEvent_FailReason) == 0x0000A0, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_CustomEvent_FailReason' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_StartAutoLogin_ReturnValue) == 0x0000B8, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_StartAutoLogin_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_Event_Widget1) == 0x0000C0, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_Event_Widget1' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_Event_State) == 0x0000C8, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_CreateDelegate_OutputDelegate12) == 0x0000D0, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_ComponentBoundEvent_Button) == 0x0000E0, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_GetChildrenCount_ReturnValue) == 0x0000E8, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_Greater_IntInt_ReturnValue) == 0x0000EC, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_GetChildrenCount_ReturnValue1) == 0x0000F0, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_GetChildrenCount_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_Greater_IntInt_ReturnValue1) == 0x0000F4, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_GetContext_ReturnValue1) == 0x0000F8, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_Event_bLinkedAccountNeedsPurchase) == 0x000100, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_Event_bLinkedAccountNeedsPurchase' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_GetContext_ReturnValue12) == 0x000108, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_GetContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_Event_Reason) == 0x000110, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_Event_Reason' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_GetContext_ReturnValue123) == 0x000128, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_GetContext_ReturnValue123' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_Event_bShow) == 0x000130, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_Event_bShow' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_Event_Tile) == 0x000138, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_Event_Tile' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_Event_Body) == 0x000150, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_Event_Body' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000168, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_GetOwningPlayer_ReturnValue) == 0x000170, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_Create_ReturnValue) == 0x000178, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_IsLoggedIn_ReturnValue) == 0x000180, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_IsLoggedIn_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_CreateDelegate_OutputDelegate123) == 0x000188, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_CreateDelegate_OutputDelegate123' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_CustomEvent_WebWidget) == 0x000198, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_CustomEvent_WebWidget' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_CloseWebLogin_bWasClosed) == 0x0001A0, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_CloseWebLogin_bWasClosed' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_Event_Widget) == 0x0001A8, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_Event_Widget' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, K2Node_Event_NextUIState) == 0x0001B0, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::K2Node_Event_NextUIState' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, Temp_int_Loop_Counter_Variable) == 0x0001B4, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_GetContext_ReturnValue1234) == 0x0001B8, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_GetContext_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_Less_IntInt_ReturnValue) == 0x0001C0, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ExecuteUbergraph_LoginScreen, CallFunc_Add_IntInt_ReturnValue) == 0x0001C4, "Member 'LoginScreen_C_ExecuteUbergraph_LoginScreen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.OnEulaDownloadComplete
// 0x0020 (0x0020 - 0x0000)
struct LoginScreen_C_OnEulaDownloadComplete final
{
public:
	bool                                          bSuccessful;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   EULAText;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(LoginScreen_C_OnEulaDownloadComplete) == 0x000008, "Wrong alignment on LoginScreen_C_OnEulaDownloadComplete");
static_assert(sizeof(LoginScreen_C_OnEulaDownloadComplete) == 0x000020, "Wrong size on LoginScreen_C_OnEulaDownloadComplete");
static_assert(offsetof(LoginScreen_C_OnEulaDownloadComplete, bSuccessful) == 0x000000, "Member 'LoginScreen_C_OnEulaDownloadComplete::bSuccessful' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_OnEulaDownloadComplete, EULAText) == 0x000008, "Member 'LoginScreen_C_OnEulaDownloadComplete::EULAText' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.OnExitState
// 0x0001 (0x0001 - 0x0000)
struct LoginScreen_C_OnExitState final
{
public:
	EFortUIState                                  NextUIState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoginScreen_C_OnExitState) == 0x000001, "Wrong alignment on LoginScreen_C_OnExitState");
static_assert(sizeof(LoginScreen_C_OnExitState) == 0x000001, "Wrong size on LoginScreen_C_OnExitState");
static_assert(offsetof(LoginScreen_C_OnExitState, NextUIState) == 0x000000, "Member 'LoginScreen_C_OnExitState::NextUIState' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.PushWidgetOntoFlowStack
// 0x0008 (0x0008 - 0x0000)
struct LoginScreen_C_PushWidgetOntoFlowStack final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoginScreen_C_PushWidgetOntoFlowStack) == 0x000008, "Wrong alignment on LoginScreen_C_PushWidgetOntoFlowStack");
static_assert(sizeof(LoginScreen_C_PushWidgetOntoFlowStack) == 0x000008, "Wrong size on LoginScreen_C_PushWidgetOntoFlowStack");
static_assert(offsetof(LoginScreen_C_PushWidgetOntoFlowStack, Widget) == 0x000000, "Member 'LoginScreen_C_PushWidgetOntoFlowStack::Widget' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.OnWebLoginDisplay
// 0x0008 (0x0008 - 0x0000)
struct LoginScreen_C_OnWebLoginDisplay final
{
public:
	class UWidget*                                WebWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoginScreen_C_OnWebLoginDisplay) == 0x000008, "Wrong alignment on LoginScreen_C_OnWebLoginDisplay");
static_assert(sizeof(LoginScreen_C_OnWebLoginDisplay) == 0x000008, "Wrong size on LoginScreen_C_OnWebLoginDisplay");
static_assert(offsetof(LoginScreen_C_OnWebLoginDisplay, WebWidget) == 0x000000, "Member 'LoginScreen_C_OnWebLoginDisplay::WebWidget' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.OnShowLoginMessage
// 0x0038 (0x0038 - 0x0000)
struct LoginScreen_C_OnShowLoginMessage final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Tile;                                              // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Body;                                              // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(LoginScreen_C_OnShowLoginMessage) == 0x000008, "Wrong alignment on LoginScreen_C_OnShowLoginMessage");
static_assert(sizeof(LoginScreen_C_OnShowLoginMessage) == 0x000038, "Wrong size on LoginScreen_C_OnShowLoginMessage");
static_assert(offsetof(LoginScreen_C_OnShowLoginMessage, bShow) == 0x000000, "Member 'LoginScreen_C_OnShowLoginMessage::bShow' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_OnShowLoginMessage, Tile) == 0x000008, "Member 'LoginScreen_C_OnShowLoginMessage::Tile' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_OnShowLoginMessage, Body) == 0x000020, "Member 'LoginScreen_C_OnShowLoginMessage::Body' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.OnPostLoginLogoutComplete
// 0x0018 (0x0018 - 0x0000)
struct LoginScreen_C_OnPostLoginLogoutComplete final
{
public:
	class FText                                   Reason;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(LoginScreen_C_OnPostLoginLogoutComplete) == 0x000008, "Wrong alignment on LoginScreen_C_OnPostLoginLogoutComplete");
static_assert(sizeof(LoginScreen_C_OnPostLoginLogoutComplete) == 0x000018, "Wrong size on LoginScreen_C_OnPostLoginLogoutComplete");
static_assert(offsetof(LoginScreen_C_OnPostLoginLogoutComplete, Reason) == 0x000000, "Member 'LoginScreen_C_OnPostLoginLogoutComplete::Reason' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.OnNeedsPurchaseOrAccountLinking
// 0x0001 (0x0001 - 0x0000)
struct LoginScreen_C_OnNeedsPurchaseOrAccountLinking final
{
public:
	bool                                          bLinkedAccountNeedsPurchase;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginScreen_C_OnNeedsPurchaseOrAccountLinking) == 0x000001, "Wrong alignment on LoginScreen_C_OnNeedsPurchaseOrAccountLinking");
static_assert(sizeof(LoginScreen_C_OnNeedsPurchaseOrAccountLinking) == 0x000001, "Wrong size on LoginScreen_C_OnNeedsPurchaseOrAccountLinking");
static_assert(offsetof(LoginScreen_C_OnNeedsPurchaseOrAccountLinking, bLinkedAccountNeedsPurchase) == 0x000000, "Member 'LoginScreen_C_OnNeedsPurchaseOrAccountLinking::bLinkedAccountNeedsPurchase' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.BndEvt__IconTextButton_K2Node_ComponentBoundEvent_20_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct LoginScreen_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_20_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoginScreen_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_20_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on LoginScreen_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_20_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(LoginScreen_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_20_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on LoginScreen_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_20_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(LoginScreen_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_20_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'LoginScreen_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_20_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.PushContentWidgetInternal
// 0x0010 (0x0010 - 0x0000)
struct LoginScreen_C_PushContentWidgetInternal final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContentPushState                      State;                                             // 0x0008(0x0003)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(LoginScreen_C_PushContentWidgetInternal) == 0x000008, "Wrong alignment on LoginScreen_C_PushContentWidgetInternal");
static_assert(sizeof(LoginScreen_C_PushContentWidgetInternal) == 0x000010, "Wrong size on LoginScreen_C_PushContentWidgetInternal");
static_assert(offsetof(LoginScreen_C_PushContentWidgetInternal, Widget) == 0x000000, "Member 'LoginScreen_C_PushContentWidgetInternal::Widget' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_PushContentWidgetInternal, State) == 0x000008, "Member 'LoginScreen_C_PushContentWidgetInternal::State' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.AccountLinking_LinkingFailed
// 0x0018 (0x0018 - 0x0000)
struct LoginScreen_C_AccountLinking_LinkingFailed final
{
public:
	class FText                                   FailReason;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(LoginScreen_C_AccountLinking_LinkingFailed) == 0x000008, "Wrong alignment on LoginScreen_C_AccountLinking_LinkingFailed");
static_assert(sizeof(LoginScreen_C_AccountLinking_LinkingFailed) == 0x000018, "Wrong size on LoginScreen_C_AccountLinking_LinkingFailed");
static_assert(offsetof(LoginScreen_C_AccountLinking_LinkingFailed, FailReason) == 0x000000, "Member 'LoginScreen_C_AccountLinking_LinkingFailed::FailReason' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.AccountLinking_PushStatus
// 0x0018 (0x0018 - 0x0000)
struct LoginScreen_C_AccountLinking_PushStatus final
{
public:
	class FText                                   StatusText;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(LoginScreen_C_AccountLinking_PushStatus) == 0x000008, "Wrong alignment on LoginScreen_C_AccountLinking_PushStatus");
static_assert(sizeof(LoginScreen_C_AccountLinking_PushStatus) == 0x000018, "Wrong size on LoginScreen_C_AccountLinking_PushStatus");
static_assert(offsetof(LoginScreen_C_AccountLinking_PushStatus, StatusText) == 0x000000, "Member 'LoginScreen_C_AccountLinking_PushStatus::StatusText' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.OnEnterState
// 0x0001 (0x0001 - 0x0000)
struct LoginScreen_C_OnEnterState final
{
public:
	EFortUIState                                  PreviousUIState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoginScreen_C_OnEnterState) == 0x000001, "Wrong alignment on LoginScreen_C_OnEnterState");
static_assert(sizeof(LoginScreen_C_OnEnterState) == 0x000001, "Wrong size on LoginScreen_C_OnEnterState");
static_assert(offsetof(LoginScreen_C_OnEnterState, PreviousUIState) == 0x000000, "Member 'LoginScreen_C_OnEnterState::PreviousUIState' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.ShowAccountLinkingWindow
// 0x00A0 (0x00A0 - 0x0000)
struct LoginScreen_C_ShowAccountLinkingWindow final
{
public:
	bool                                          InLinkedAccountNeedsPurchase;                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetPlatformDisplayName_ReturnValue;       // 0x0008(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FText FailReason)>       K2Node_CreateDelegate_OutputDelegate12;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate123;           // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FText StatusText)>       K2Node_CreateDelegate_OutputDelegate1234;          // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate12345;         // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAccountLinkingWindow_C*                CallFunc_Create_ReturnValue;                       // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAccountLinkingWindow_C*                K2Node_DynamicCast_AsAccount_Linking_Window;       // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginScreen_C_ShowAccountLinkingWindow) == 0x000008, "Wrong alignment on LoginScreen_C_ShowAccountLinkingWindow");
static_assert(sizeof(LoginScreen_C_ShowAccountLinkingWindow) == 0x0000A0, "Wrong size on LoginScreen_C_ShowAccountLinkingWindow");
static_assert(offsetof(LoginScreen_C_ShowAccountLinkingWindow, InLinkedAccountNeedsPurchase) == 0x000000, "Member 'LoginScreen_C_ShowAccountLinkingWindow::InLinkedAccountNeedsPurchase' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ShowAccountLinkingWindow, CallFunc_GetPlatformDisplayName_ReturnValue) == 0x000008, "Member 'LoginScreen_C_ShowAccountLinkingWindow::CallFunc_GetPlatformDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ShowAccountLinkingWindow, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'LoginScreen_C_ShowAccountLinkingWindow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ShowAccountLinkingWindow, K2Node_CreateDelegate_OutputDelegate1) == 0x000030, "Member 'LoginScreen_C_ShowAccountLinkingWindow::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ShowAccountLinkingWindow, K2Node_CreateDelegate_OutputDelegate12) == 0x000040, "Member 'LoginScreen_C_ShowAccountLinkingWindow::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ShowAccountLinkingWindow, K2Node_CreateDelegate_OutputDelegate123) == 0x000050, "Member 'LoginScreen_C_ShowAccountLinkingWindow::K2Node_CreateDelegate_OutputDelegate123' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ShowAccountLinkingWindow, K2Node_CreateDelegate_OutputDelegate1234) == 0x000060, "Member 'LoginScreen_C_ShowAccountLinkingWindow::K2Node_CreateDelegate_OutputDelegate1234' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ShowAccountLinkingWindow, K2Node_CreateDelegate_OutputDelegate12345) == 0x000070, "Member 'LoginScreen_C_ShowAccountLinkingWindow::K2Node_CreateDelegate_OutputDelegate12345' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ShowAccountLinkingWindow, CallFunc_GetOwningPlayer_ReturnValue) == 0x000080, "Member 'LoginScreen_C_ShowAccountLinkingWindow::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ShowAccountLinkingWindow, CallFunc_Create_ReturnValue) == 0x000088, "Member 'LoginScreen_C_ShowAccountLinkingWindow::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ShowAccountLinkingWindow, K2Node_DynamicCast_AsAccount_Linking_Window) == 0x000090, "Member 'LoginScreen_C_ShowAccountLinkingWindow::K2Node_DynamicCast_AsAccount_Linking_Window' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ShowAccountLinkingWindow, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'LoginScreen_C_ShowAccountLinkingWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ShowAccountLinkingWindow, CallFunc_IsValid_ReturnValue) == 0x000099, "Member 'LoginScreen_C_ShowAccountLinkingWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.ToggleLoginMenu
// 0x0005 (0x0005 - 0x0000)
struct LoginScreen_C_ToggleLoginMenu final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoginScreen_C_ToggleLoginMenu) == 0x000001, "Wrong alignment on LoginScreen_C_ToggleLoginMenu");
static_assert(sizeof(LoginScreen_C_ToggleLoginMenu) == 0x000005, "Wrong size on LoginScreen_C_ToggleLoginMenu");
static_assert(offsetof(LoginScreen_C_ToggleLoginMenu, Temp_bool_Variable) == 0x000000, "Member 'LoginScreen_C_ToggleLoginMenu::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ToggleLoginMenu, Temp_byte_Variable) == 0x000001, "Member 'LoginScreen_C_ToggleLoginMenu::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ToggleLoginMenu, Temp_byte_Variable1) == 0x000002, "Member 'LoginScreen_C_ToggleLoginMenu::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ToggleLoginMenu, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'LoginScreen_C_ToggleLoginMenu::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ToggleLoginMenu, K2Node_Select_Default) == 0x000004, "Member 'LoginScreen_C_ToggleLoginMenu::K2Node_Select_Default' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.OnMouseButtonUp_MenuBorder
// 0x0210 (0x0210 - 0x0000)
struct LoginScreen_C_OnMouseButtonUp_MenuBorder final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0158(0x00B8)()
};
static_assert(alignof(LoginScreen_C_OnMouseButtonUp_MenuBorder) == 0x000008, "Wrong alignment on LoginScreen_C_OnMouseButtonUp_MenuBorder");
static_assert(sizeof(LoginScreen_C_OnMouseButtonUp_MenuBorder) == 0x000210, "Wrong size on LoginScreen_C_OnMouseButtonUp_MenuBorder");
static_assert(offsetof(LoginScreen_C_OnMouseButtonUp_MenuBorder, MyGeometry) == 0x000000, "Member 'LoginScreen_C_OnMouseButtonUp_MenuBorder::MyGeometry' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_OnMouseButtonUp_MenuBorder, MouseEvent) == 0x000038, "Member 'LoginScreen_C_OnMouseButtonUp_MenuBorder::MouseEvent' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_OnMouseButtonUp_MenuBorder, ReturnValue) == 0x0000A0, "Member 'LoginScreen_C_OnMouseButtonUp_MenuBorder::ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_OnMouseButtonUp_MenuBorder, CallFunc_Handled_ReturnValue) == 0x000158, "Member 'LoginScreen_C_OnMouseButtonUp_MenuBorder::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.GetLoginMenu
// 0x0008 (0x0008 - 0x0000)
struct LoginScreen_C_GetLoginMenu final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoginScreen_C_GetLoginMenu) == 0x000008, "Wrong alignment on LoginScreen_C_GetLoginMenu");
static_assert(sizeof(LoginScreen_C_GetLoginMenu) == 0x000008, "Wrong size on LoginScreen_C_GetLoginMenu");
static_assert(offsetof(LoginScreen_C_GetLoginMenu, ReturnValue) == 0x000000, "Member 'LoginScreen_C_GetLoginMenu::ReturnValue' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.PopContentWidgetInternal
// 0x0018 (0x0018 - 0x0000)
struct LoginScreen_C_PopContentWidgetInternal final
{
public:
	struct FContentPushState                      State;                                             // 0x0000(0x0003)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_PopWigdet_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoginScreen_C_PopContentWidgetInternal) == 0x000008, "Wrong alignment on LoginScreen_C_PopContentWidgetInternal");
static_assert(sizeof(LoginScreen_C_PopContentWidgetInternal) == 0x000018, "Wrong size on LoginScreen_C_PopContentWidgetInternal");
static_assert(offsetof(LoginScreen_C_PopContentWidgetInternal, State) == 0x000000, "Member 'LoginScreen_C_PopContentWidgetInternal::State' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_PopContentWidgetInternal, ReturnValue) == 0x000008, "Member 'LoginScreen_C_PopContentWidgetInternal::ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_PopContentWidgetInternal, CallFunc_PopWigdet_ReturnValue) == 0x000010, "Member 'LoginScreen_C_PopContentWidgetInternal::CallFunc_PopWigdet_ReturnValue' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.RollbackToSplashScreen
// 0x0010 (0x0010 - 0x0000)
struct LoginScreen_C_RollbackToSplashScreen final
{
public:
	class UWidget*                                CallFunc_PopWigdet_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginScreen_C_RollbackToSplashScreen) == 0x000008, "Wrong alignment on LoginScreen_C_RollbackToSplashScreen");
static_assert(sizeof(LoginScreen_C_RollbackToSplashScreen) == 0x000010, "Wrong size on LoginScreen_C_RollbackToSplashScreen");
static_assert(offsetof(LoginScreen_C_RollbackToSplashScreen, CallFunc_PopWigdet_ReturnValue) == 0x000000, "Member 'LoginScreen_C_RollbackToSplashScreen::CallFunc_PopWigdet_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_RollbackToSplashScreen, CallFunc_GetChildrenCount_ReturnValue) == 0x000008, "Member 'LoginScreen_C_RollbackToSplashScreen::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_RollbackToSplashScreen, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'LoginScreen_C_RollbackToSplashScreen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.EmptyLoginStack
// 0x0010 (0x0010 - 0x0000)
struct LoginScreen_C_EmptyLoginStack final
{
public:
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_PopWigdet_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoginScreen_C_EmptyLoginStack) == 0x000008, "Wrong alignment on LoginScreen_C_EmptyLoginStack");
static_assert(sizeof(LoginScreen_C_EmptyLoginStack) == 0x000010, "Wrong size on LoginScreen_C_EmptyLoginStack");
static_assert(offsetof(LoginScreen_C_EmptyLoginStack, CallFunc_GetChildrenCount_ReturnValue) == 0x000000, "Member 'LoginScreen_C_EmptyLoginStack::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_EmptyLoginStack, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'LoginScreen_C_EmptyLoginStack::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_EmptyLoginStack, CallFunc_PopWigdet_ReturnValue) == 0x000008, "Member 'LoginScreen_C_EmptyLoginStack::CallFunc_PopWigdet_ReturnValue' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.SafePopContent
// 0x0018 (0x0018 - 0x0000)
struct LoginScreen_C_SafePopContent final
{
public:
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_PopWigdet_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginScreen_C_SafePopContent) == 0x000008, "Wrong alignment on LoginScreen_C_SafePopContent");
static_assert(sizeof(LoginScreen_C_SafePopContent) == 0x000018, "Wrong size on LoginScreen_C_SafePopContent");
static_assert(offsetof(LoginScreen_C_SafePopContent, CallFunc_GetChildrenCount_ReturnValue) == 0x000000, "Member 'LoginScreen_C_SafePopContent::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_SafePopContent, CallFunc_PopWigdet_ReturnValue) == 0x000008, "Member 'LoginScreen_C_SafePopContent::CallFunc_PopWigdet_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_SafePopContent, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'LoginScreen_C_SafePopContent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.CloseWebLogin
// 0x0028 (0x0028 - 0x0000)
struct LoginScreen_C_CloseWebLogin final
{
public:
	bool                                          bWasClosed;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWebLogin_C*                            K2Node_DynamicCast_AsWeb_Login;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginScreen_C_CloseWebLogin) == 0x000008, "Wrong alignment on LoginScreen_C_CloseWebLogin");
static_assert(sizeof(LoginScreen_C_CloseWebLogin) == 0x000028, "Wrong size on LoginScreen_C_CloseWebLogin");
static_assert(offsetof(LoginScreen_C_CloseWebLogin, bWasClosed) == 0x000000, "Member 'LoginScreen_C_CloseWebLogin::bWasClosed' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_CloseWebLogin, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'LoginScreen_C_CloseWebLogin::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_CloseWebLogin, CallFunc_GetActiveWidget_ReturnValue) == 0x000010, "Member 'LoginScreen_C_CloseWebLogin::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_CloseWebLogin, K2Node_DynamicCast_AsWeb_Login) == 0x000018, "Member 'LoginScreen_C_CloseWebLogin::K2Node_DynamicCast_AsWeb_Login' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_CloseWebLogin, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'LoginScreen_C_CloseWebLogin::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.DismissWebLogin
// 0x0008 (0x0008 - 0x0000)
struct LoginScreen_C_DismissWebLogin final
{
public:
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginScreen_C_DismissWebLogin) == 0x000004, "Wrong alignment on LoginScreen_C_DismissWebLogin");
static_assert(sizeof(LoginScreen_C_DismissWebLogin) == 0x000008, "Wrong size on LoginScreen_C_DismissWebLogin");
static_assert(offsetof(LoginScreen_C_DismissWebLogin, CallFunc_GetChildrenCount_ReturnValue) == 0x000000, "Member 'LoginScreen_C_DismissWebLogin::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_DismissWebLogin, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'LoginScreen_C_DismissWebLogin::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function LoginScreen.LoginScreen_C.ShowExternalLogin
// 0x0018 (0x0018 - 0x0000)
struct LoginScreen_C_ShowExternalLogin final
{
public:
	class UWidget*                                NativeWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWebLogin_C*                            CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoginScreen_C_ShowExternalLogin) == 0x000008, "Wrong alignment on LoginScreen_C_ShowExternalLogin");
static_assert(sizeof(LoginScreen_C_ShowExternalLogin) == 0x000018, "Wrong size on LoginScreen_C_ShowExternalLogin");
static_assert(offsetof(LoginScreen_C_ShowExternalLogin, NativeWidget) == 0x000000, "Member 'LoginScreen_C_ShowExternalLogin::NativeWidget' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ShowExternalLogin, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'LoginScreen_C_ShowExternalLogin::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginScreen_C_ShowExternalLogin, CallFunc_Create_ReturnValue) == 0x000010, "Member 'LoginScreen_C_ShowExternalLogin::CallFunc_Create_ReturnValue' has a wrong offset!");

}

