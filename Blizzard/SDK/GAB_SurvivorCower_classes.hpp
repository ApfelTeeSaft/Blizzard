#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_SurvivorCower

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GAB_SurvivorCower.GAB_SurvivorCower_C
// 0x0038 (0x0AE8 - 0x0AB0)
class UGAB_SurvivorCower_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB0(0x0008)(Transient, DuplicateTransient)
	float                                         CowerTimeMin;                                      // 0x0AB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CowerTimeMax;                                      // 0x0ABC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_NPCAbilityNonAttackCowerTrue;                   // 0x0AC0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_NPCAbilityNonAttackCowerFalse;                  // 0x0AC8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_NPCAbilityNonAttackCowerIndefiniteTrue;         // 0x0AD0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_NPCAbilityNonAttackCowerIndefiniteFalse;        // 0x0AD8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CowerIndefinitely;                                 // 0x0AE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GAB_SurvivorCower(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void CowerFalse();
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GAB_SurvivorCower_C">();
	}
	static class UGAB_SurvivorCower_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGAB_SurvivorCower_C>();
	}
};
static_assert(alignof(UGAB_SurvivorCower_C) == 0x000008, "Wrong alignment on UGAB_SurvivorCower_C");
static_assert(sizeof(UGAB_SurvivorCower_C) == 0x000AE8, "Wrong size on UGAB_SurvivorCower_C");
static_assert(offsetof(UGAB_SurvivorCower_C, UberGraphFrame) == 0x000AB0, "Member 'UGAB_SurvivorCower_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorCower_C, CowerTimeMin) == 0x000AB8, "Member 'UGAB_SurvivorCower_C::CowerTimeMin' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorCower_C, CowerTimeMax) == 0x000ABC, "Member 'UGAB_SurvivorCower_C::CowerTimeMax' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorCower_C, TC_NPCAbilityNonAttackCowerTrue) == 0x000AC0, "Member 'UGAB_SurvivorCower_C::TC_NPCAbilityNonAttackCowerTrue' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorCower_C, TC_NPCAbilityNonAttackCowerFalse) == 0x000AC8, "Member 'UGAB_SurvivorCower_C::TC_NPCAbilityNonAttackCowerFalse' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorCower_C, TC_NPCAbilityNonAttackCowerIndefiniteTrue) == 0x000AD0, "Member 'UGAB_SurvivorCower_C::TC_NPCAbilityNonAttackCowerIndefiniteTrue' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorCower_C, TC_NPCAbilityNonAttackCowerIndefiniteFalse) == 0x000AD8, "Member 'UGAB_SurvivorCower_C::TC_NPCAbilityNonAttackCowerIndefiniteFalse' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorCower_C, CowerIndefinitely) == 0x000AE0, "Member 'UGAB_SurvivorCower_C::CowerIndefinitely' has a wrong offset!");

}

