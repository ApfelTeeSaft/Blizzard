#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeBundlePage

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function ChallengeBundlePage.ChallengeBundlePage_C.ExecuteUbergraph_ChallengeBundlePage
// 0x0004 (0x0004 - 0x0000)
struct ChallengeBundlePage_C_ExecuteUbergraph_ChallengeBundlePage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeBundlePage_C_ExecuteUbergraph_ChallengeBundlePage) == 0x000004, "Wrong alignment on ChallengeBundlePage_C_ExecuteUbergraph_ChallengeBundlePage");
static_assert(sizeof(ChallengeBundlePage_C_ExecuteUbergraph_ChallengeBundlePage) == 0x000004, "Wrong size on ChallengeBundlePage_C_ExecuteUbergraph_ChallengeBundlePage");
static_assert(offsetof(ChallengeBundlePage_C_ExecuteUbergraph_ChallengeBundlePage, EntryPoint) == 0x000000, "Member 'ChallengeBundlePage_C_ExecuteUbergraph_ChallengeBundlePage::EntryPoint' has a wrong offset!");

// Function ChallengeBundlePage.ChallengeBundlePage_C.SetChallengeBundleItem
// 0x0020 (0x0020 - 0x0000)
struct ChallengeBundlePage_C_SetChallengeBundleItem final
{
public:
	class UFortChallengeBundleItem*               InChallengeBundleItem;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(ChallengeBundlePage_C_SetChallengeBundleItem) == 0x000008, "Wrong alignment on ChallengeBundlePage_C_SetChallengeBundleItem");
static_assert(sizeof(ChallengeBundlePage_C_SetChallengeBundleItem) == 0x000020, "Wrong size on ChallengeBundlePage_C_SetChallengeBundleItem");
static_assert(offsetof(ChallengeBundlePage_C_SetChallengeBundleItem, InChallengeBundleItem) == 0x000000, "Member 'ChallengeBundlePage_C_SetChallengeBundleItem::InChallengeBundleItem' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_SetChallengeBundleItem, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'ChallengeBundlePage_C_SetChallengeBundleItem::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

// Function ChallengeBundlePage.ChallengeBundlePage_C.UpdateQuests
// 0x00A8 (0x00A8 - 0x0000)
struct ChallengeBundlePage_C_UpdateQuests final
{
public:
	bool                                          bHasQuestsToClaim;                                 // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAchievedCount_OutTotalAchievedCount;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAchievedCount_OutTotalRequiredCount;   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortChallengeBundleItemDefinition*     CallFunc_GetChallengeDefinitionBP_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortQuestItem*>                 CallFunc_GetQuests_OwnedQuests;                    // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UFortQuestItemDefinition*>       CallFunc_GetQuests_UnownedQuests;                  // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItemDefinition*               CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortQuestType                                CallFunc_GetQuestType_ReturnValue;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItem*                         CallFunc_Array_Get_Item1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItemDefinition*               CallFunc_GetQuestDefinitionBP_ReturnValue;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuestType                                CallFunc_GetQuestType_ReturnValue1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuestState                               CallFunc_GetQuestState_ReturnValue;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeBundlePage_C_UpdateQuests) == 0x000008, "Wrong alignment on ChallengeBundlePage_C_UpdateQuests");
static_assert(sizeof(ChallengeBundlePage_C_UpdateQuests) == 0x0000A8, "Wrong size on ChallengeBundlePage_C_UpdateQuests");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, bHasQuestsToClaim) == 0x000000, "Member 'ChallengeBundlePage_C_UpdateQuests::bHasQuestsToClaim' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ChallengeBundlePage_C_UpdateQuests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ChallengeBundlePage_C_UpdateQuests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, Temp_int_Array_Index_Variable1) == 0x000010, "Member 'ChallengeBundlePage_C_UpdateQuests::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, Temp_byte_Variable) == 0x000014, "Member 'ChallengeBundlePage_C_UpdateQuests::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, Temp_byte_Variable1) == 0x000015, "Member 'ChallengeBundlePage_C_UpdateQuests::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_GetAchievedCount_OutTotalAchievedCount) == 0x000018, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_GetAchievedCount_OutTotalAchievedCount' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_GetAchievedCount_OutTotalRequiredCount) == 0x00001C, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_GetAchievedCount_OutTotalRequiredCount' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, Temp_int_Loop_Counter_Variable1) == 0x000020, "Member 'ChallengeBundlePage_C_UpdateQuests::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_Add_IntInt_ReturnValue1) == 0x000024, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, Temp_bool_Variable) == 0x000028, "Member 'ChallengeBundlePage_C_UpdateQuests::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_GetChallengeDefinitionBP_ReturnValue) == 0x000030, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_GetChallengeDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_GetContext_ReturnValue) == 0x000038, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, K2Node_Select_Default) == 0x000040, "Member 'ChallengeBundlePage_C_UpdateQuests::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_GetQuestManager_ReturnValue) == 0x000048, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_GetQuests_OwnedQuests) == 0x000050, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_GetQuests_OwnedQuests' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_GetQuests_UnownedQuests) == 0x000060, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_GetQuests_UnownedQuests' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_Array_Get_Item) == 0x000078, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_GetQuestType_ReturnValue) == 0x000081, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_GetQuestType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_Array_Length_ReturnValue1) == 0x000084, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000088, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_Less_IntInt_ReturnValue1) == 0x000089, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_Array_Get_Item1) == 0x000090, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_GetQuestDefinitionBP_ReturnValue) == 0x000098, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_GetQuestDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_GetQuestType_ReturnValue1) == 0x0000A0, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_GetQuestType_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_GetQuestState_ReturnValue) == 0x0000A1, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_GetQuestState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x0000A2, "Member 'ChallengeBundlePage_C_UpdateQuests::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_UpdateQuests, K2Node_SwitchEnum_CmpSuccess) == 0x0000A3, "Member 'ChallengeBundlePage_C_UpdateQuests::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ChallengeBundlePage.ChallengeBundlePage_C.RegisterEventListeners
// 0x0020 (0x0020 - 0x0000)
struct ChallengeBundlePage_C_RegisterEventListeners final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeBundlePage_C_RegisterEventListeners) == 0x000008, "Wrong alignment on ChallengeBundlePage_C_RegisterEventListeners");
static_assert(sizeof(ChallengeBundlePage_C_RegisterEventListeners) == 0x000020, "Wrong size on ChallengeBundlePage_C_RegisterEventListeners");
static_assert(offsetof(ChallengeBundlePage_C_RegisterEventListeners, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ChallengeBundlePage_C_RegisterEventListeners::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_RegisterEventListeners, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'ChallengeBundlePage_C_RegisterEventListeners::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_RegisterEventListeners, CallFunc_GetQuestManager_ReturnValue) == 0x000018, "Member 'ChallengeBundlePage_C_RegisterEventListeners::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");

// Function ChallengeBundlePage.ChallengeBundlePage_C.CreateDisabledQuestWidget
// 0x0020 (0x0020 - 0x0000)
struct ChallengeBundlePage_C_CreateDisabledQuestWidget final
{
public:
	class UFortQuestItemDefinition*               QuestDefinition;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDisabledQuestWidget_C*                 CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeBundlePage_C_CreateDisabledQuestWidget) == 0x000008, "Wrong alignment on ChallengeBundlePage_C_CreateDisabledQuestWidget");
static_assert(sizeof(ChallengeBundlePage_C_CreateDisabledQuestWidget) == 0x000020, "Wrong size on ChallengeBundlePage_C_CreateDisabledQuestWidget");
static_assert(offsetof(ChallengeBundlePage_C_CreateDisabledQuestWidget, QuestDefinition) == 0x000000, "Member 'ChallengeBundlePage_C_CreateDisabledQuestWidget::QuestDefinition' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_CreateDisabledQuestWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'ChallengeBundlePage_C_CreateDisabledQuestWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_CreateDisabledQuestWidget, CallFunc_Create_ReturnValue) == 0x000010, "Member 'ChallengeBundlePage_C_CreateDisabledQuestWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_CreateDisabledQuestWidget, CallFunc_AddChild_ReturnValue) == 0x000018, "Member 'ChallengeBundlePage_C_CreateDisabledQuestWidget::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function ChallengeBundlePage.ChallengeBundlePage_C.CreateQuestWidget
// 0x0020 (0x0020 - 0x0000)
struct ChallengeBundlePage_C_CreateQuestWidget final
{
public:
	class UFortQuestItem*                         Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDailyQuestWidget_C*                    CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeBundlePage_C_CreateQuestWidget) == 0x000008, "Wrong alignment on ChallengeBundlePage_C_CreateQuestWidget");
static_assert(sizeof(ChallengeBundlePage_C_CreateQuestWidget) == 0x000020, "Wrong size on ChallengeBundlePage_C_CreateQuestWidget");
static_assert(offsetof(ChallengeBundlePage_C_CreateQuestWidget, Quest) == 0x000000, "Member 'ChallengeBundlePage_C_CreateQuestWidget::Quest' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_CreateQuestWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'ChallengeBundlePage_C_CreateQuestWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_CreateQuestWidget, CallFunc_Create_ReturnValue) == 0x000010, "Member 'ChallengeBundlePage_C_CreateQuestWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeBundlePage_C_CreateQuestWidget, CallFunc_AddChild_ReturnValue) == 0x000018, "Member 'ChallengeBundlePage_C_CreateQuestWidget::CallFunc_AddChild_ReturnValue' has a wrong offset!");

}

