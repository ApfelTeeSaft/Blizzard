#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeBundleScheduleDisplay

#include "Basic.hpp"

#include "ChallengeBundleScheduleDisplay_classes.hpp"
#include "ChallengeBundleScheduleDisplay_parameters.hpp"


namespace SDK
{

// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.ExecuteUbergraph_ChallengeBundleScheduleDisplay
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundleScheduleDisplay_C::ExecuteUbergraph_ChallengeBundleScheduleDisplay(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "ExecuteUbergraph_ChallengeBundleScheduleDisplay");

	Params::ChallengeBundleScheduleDisplay_C_ExecuteUbergraph_ChallengeBundleScheduleDisplay Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.OnActivated
// (Event, Protected, BlueprintEvent)

void UChallengeBundleScheduleDisplay_C::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.OnDeactivated
// (Event, Protected, BlueprintEvent)

void UChallengeBundleScheduleDisplay_C::OnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_12_OnTabButtonCreated__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FName                             TabId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCommonButton*                    TabButton                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundleScheduleDisplay_C::BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_12_OnTabButtonCreated__DelegateSignature(class FName TabId, class UCommonButton* TabButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_12_OnTabButtonCreated__DelegateSignature");

	Params::ChallengeBundleScheduleDisplay_C_BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_12_OnTabButtonCreated__DelegateSignature Parms{};

	Parms.TabId = TabId;
	Parms.TabButton = TabButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_1_OnTabSelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FName                             TabId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundleScheduleDisplay_C::BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_1_OnTabSelected__DelegateSignature(class FName TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_1_OnTabSelected__DelegateSignature");

	Params::ChallengeBundleScheduleDisplay_C_BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_1_OnTabSelected__DelegateSignature Parms{};

	Parms.TabId = TabId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UChallengeBundleScheduleDisplay_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.SetBundle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortChallengeBundleScheduleItem* BundleInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFortChallengeBundleScheduleDefinition*BundleScheduleDef_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundleScheduleDisplay_C::SetBundle(class UFortChallengeBundleScheduleItem* BundleInstance, class UFortChallengeBundleScheduleDefinition* BundleScheduleDef_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "SetBundle");

	Params::ChallengeBundleScheduleDisplay_C_SetBundle Parms{};

	Parms.BundleInstance = BundleInstance;
	Parms.BundleScheduleDef_0 = BundleScheduleDef_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.UpdateTabs
// (Public, BlueprintCallable, BlueprintEvent)

void UChallengeBundleScheduleDisplay_C::UpdateTabs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "UpdateTabs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.ResetTabs
// (Public, BlueprintCallable, BlueprintEvent)

void UChallengeBundleScheduleDisplay_C::ResetTabs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "ResetTabs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.CreateTab
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortChallengeBundleItemDefinition*ChallengeDef                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ContentWidget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundleScheduleDisplay_C::CreateTab(class UFortChallengeBundleItemDefinition* ChallengeDef, class UWidget* ContentWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "CreateTab");

	Params::ChallengeBundleScheduleDisplay_C_CreateTab Parms{};

	Parms.ChallengeDef = ChallengeDef;
	Parms.ContentWidget = ContentWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.HandleTabCreated
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             TabId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCommonButton*                    Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundleScheduleDisplay_C::HandleTabCreated(class FName TabId, class UCommonButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "HandleTabCreated");

	Params::ChallengeBundleScheduleDisplay_C_HandleTabCreated Parms{};

	Parms.TabId = TabId;
	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.HandleTabSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             TabId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundleScheduleDisplay_C::HandleTabSelected(class FName TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "HandleTabSelected");

	Params::ChallengeBundleScheduleDisplay_C_HandleTabSelected Parms{};

	Parms.TabId = TabId;

	UObject::ProcessEvent(Func, &Parms);
}

}

