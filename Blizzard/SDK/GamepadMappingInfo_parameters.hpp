#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GamepadMappingInfo

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function GamepadMappingInfo.GamepadMappingInfo_C.Update Displayed Mapping
// 0x00D0 (0x00D0 - 0x0000)
struct GamepadMappingInfo_C_Update_Displayed_Mapping final
{
public:
	int32                                         Platform;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Mode;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Configuration;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             T_Mode_Combat;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             T_Mode_Build;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             T_PS4_Lines;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             T_XboxOne_Lines;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             T_PS4;                                             // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             T_XboxOne;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable12;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable123;                             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable12;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable1;                               // 0x0070(0x0018)()
	int32                                         Temp_int_Variable123;                              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1_Default;                            // 0x0090(0x0018)()
	int32                                         Temp_int_Variable1234;                             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable12345;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select12_Default;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select123_Default;                          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select1234_Default;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select12345_Default;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GamepadMappingInfo_C_Update_Displayed_Mapping) == 0x000008, "Wrong alignment on GamepadMappingInfo_C_Update_Displayed_Mapping");
static_assert(sizeof(GamepadMappingInfo_C_Update_Displayed_Mapping) == 0x0000D0, "Wrong size on GamepadMappingInfo_C_Update_Displayed_Mapping");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Platform) == 0x000000, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Platform' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Mode) == 0x000004, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Mode' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Configuration) == 0x000008, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Configuration' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, T_Mode_Combat) == 0x000010, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::T_Mode_Combat' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, T_Mode_Build) == 0x000018, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::T_Mode_Build' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, T_PS4_Lines) == 0x000020, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::T_PS4_Lines' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, T_XboxOne_Lines) == 0x000028, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::T_XboxOne_Lines' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, T_PS4) == 0x000030, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::T_PS4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, T_XboxOne) == 0x000038, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::T_XboxOne' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_byte_Variable) == 0x000040, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_byte_Variable1) == 0x000041, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_int_Variable) == 0x000044, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_byte_Variable12) == 0x000048, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_byte_Variable12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_byte_Variable123) == 0x000049, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_byte_Variable123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_int_Variable1) == 0x00004C, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, K2Node_Select_Default) == 0x000050, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_int_Variable12) == 0x000054, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_int_Variable12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_text_Variable) == 0x000058, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_text_Variable1) == 0x000070, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_text_Variable1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_int_Variable123) == 0x000088, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_int_Variable123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, K2Node_Select1_Default) == 0x000090, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_int_Variable1234) == 0x0000A8, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_int_Variable1234' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_int_Variable12345) == 0x0000AC, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_int_Variable12345' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, K2Node_Select12_Default) == 0x0000B0, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::K2Node_Select12_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, K2Node_Select123_Default) == 0x0000B8, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::K2Node_Select123_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, K2Node_Select1234_Default) == 0x0000C0, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::K2Node_Select1234_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, K2Node_Select12345_Default) == 0x0000C8, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::K2Node_Select12345_Default' has a wrong offset!");

// Function GamepadMappingInfo.GamepadMappingInfo_C.OnConfigChanged
// 0x0018 (0x0018 - 0x0000)
struct GamepadMappingInfo_C_OnConfigChanged final
{
public:
	int32                                         Mode;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Config;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GamepadMappingInfo_C_OnConfigChanged) == 0x000008, "Wrong alignment on GamepadMappingInfo_C_OnConfigChanged");
static_assert(sizeof(GamepadMappingInfo_C_OnConfigChanged) == 0x000018, "Wrong size on GamepadMappingInfo_C_OnConfigChanged");
static_assert(offsetof(GamepadMappingInfo_C_OnConfigChanged, Mode) == 0x000000, "Member 'GamepadMappingInfo_C_OnConfigChanged::Mode' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_OnConfigChanged, Config) == 0x000004, "Member 'GamepadMappingInfo_C_OnConfigChanged::Config' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_OnConfigChanged, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'GamepadMappingInfo_C_OnConfigChanged::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_OnConfigChanged, CallFunc_GetSubGame_ReturnValue) == 0x000010, "Member 'GamepadMappingInfo_C_OnConfigChanged::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_OnConfigChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'GamepadMappingInfo_C_OnConfigChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function GamepadMappingInfo.GamepadMappingInfo_C.HandleConfigChanged_Athena
// 0x1658 (0x1658 - 0x0000)
struct GamepadMappingInfo_C_HandleConfigChanged_Athena final
{
public:
	int32                                         Mode;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Config;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable1;                               // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable12;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable123;                             // 0x0058(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0078(0x0018)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable1234;                            // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable12345;                           // 0x00B0(0x0018)()
	bool                                          Temp_bool_Variable1;                               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable12;                              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1_Default;                            // 0x00D0(0x0018)()
	ESlateVisibility                              Temp_byte_Variable123;                             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable12;                               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable123456;                          // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable1234567;                         // 0x0108(0x0018)()
	class FText                                   Temp_text_Variable12345678;                        // 0x0120(0x0018)()
	int32                                         Temp_int_Variable123;                              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12_Default;                           // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable123456789;                       // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable12345678910;                     // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable1234567891011;                   // 0x0188(0x0018)()
	int32                                         Temp_int_Variable1234;                             // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123_Default;                          // 0x01A8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112;                 // 0x01C0(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213;               // 0x01D8(0x0018)()
	bool                                          Temp_bool_Variable12;                              // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234_Default;                         // 0x01F8(0x0018)()
	ESlateVisibility                              Temp_byte_Variable1234;                            // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable12345;                           // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable123;                             // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable123456;                          // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1234567;                         // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1234;                            // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable12345678;                        // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable123456789;                       // 0x0217(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable12345;                           // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable12345678910;                     // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1234567891011;                   // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21B[0x1];                                      // 0x021B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable12345;                            // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable1234567891011121314;             // 0x0220(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415;           // 0x0238(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516;         // 0x0250(0x0018)()
	int32                                         Temp_int_Variable123456;                           // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345_Default;                        // 0x0270(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617;       // 0x0288(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718;     // 0x02A0(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819;   // 0x02B8(0x0018)()
	int32                                         Temp_int_Variable1234567;                          // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456_Default;                       // 0x02D8(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920; // 0x02F0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021; // 0x0308(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122; // 0x0320(0x0018)()
	int32                                         Temp_int_Variable12345678;                         // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567_Default;                      // 0x0340(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223; // 0x0358(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324; // 0x0370(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425; // 0x0388(0x0018)()
	int32                                         Temp_int_Variable123456789;                        // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678_Default;                     // 0x03A8(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526; // 0x03C0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627; // 0x03D8(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728; // 0x03F0(0x0018)()
	int32                                         Temp_int_Variable12345678910;                      // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789_Default;                    // 0x0410(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829; // 0x0428(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930; // 0x0440(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031; // 0x0458(0x0018)()
	int32                                         Temp_int_Variable1234567891011;                    // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910_Default;                  // 0x0478(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132; // 0x0490(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233; // 0x04A8(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334; // 0x04C0(0x0018)()
	int32                                         Temp_int_Variable123456789101112;                  // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011_Default;                // 0x04E0(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435; // 0x04F8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536; // 0x0510(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637; // 0x0528(0x0018)()
	int32                                         Temp_int_Variable12345678910111213;                // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112_Default;              // 0x0548(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738; // 0x0560(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839; // 0x0578(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940; // 0x0590(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314;              // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213_Default;            // 0x05B0(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041; // 0x05C8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142; // 0x05E0(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243; // 0x05F8(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415;            // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314_Default;          // 0x0618(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344; // 0x0630(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445; // 0x0648(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546; // 0x0660(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516;          // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67C[0x4];                                      // 0x067C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415_Default;        // 0x0680(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647; // 0x0698(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748; // 0x06B0(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849; // 0x06C8(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617;        // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4[0x4];                                      // 0x06E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516_Default;      // 0x06E8(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950; // 0x0700(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051; // 0x0718(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152; // 0x0730(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718;      // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74C[0x4];                                      // 0x074C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617_Default;    // 0x0750(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253; // 0x0768(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354; // 0x0780(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455; // 0x0798(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819;    // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B4[0x4];                                      // 0x07B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718_Default;  // 0x07B8(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556; // 0x07D0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657; // 0x07E8(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758; // 0x0800(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920;  // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81C[0x4];                                      // 0x081C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819_Default; // 0x0820(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859; // 0x0838(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960; // 0x0850(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061; // 0x0868(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021; // 0x0880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_884[0x4];                                      // 0x0884(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920_Default; // 0x0888(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162; // 0x08A0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263; // 0x08B8(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364; // 0x08D0(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122; // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8EC[0x4];                                      // 0x08EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021_Default; // 0x08F0(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465; // 0x0908(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566; // 0x0920(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667; // 0x0938(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223; // 0x0950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_954[0x4];                                      // 0x0954(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122_Default; // 0x0958(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768; // 0x0970(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869; // 0x0988(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970; // 0x09A0(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324; // 0x09B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BC[0x4];                                      // 0x09BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223_Default; // 0x09C0(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071; // 0x09D8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172; // 0x09F0(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273; // 0x0A08(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425; // 0x0A20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A24[0x4];                                      // 0x0A24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324_Default; // 0x0A28(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374; // 0x0A40(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475; // 0x0A58(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576; // 0x0A70(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526; // 0x0A88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8C[0x4];                                      // 0x0A8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425_Default; // 0x0A90(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677; // 0x0AA8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778; // 0x0AC0(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879; // 0x0AD8(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627; // 0x0AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF4[0x4];                                      // 0x0AF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526_Default; // 0x0AF8(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980; // 0x0B10(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081; // 0x0B28(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182; // 0x0B40(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728; // 0x0B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5C[0x4];                                      // 0x0B5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627_Default; // 0x0B60(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283; // 0x0B78(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384; // 0x0B90(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485; // 0x0BA8(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829; // 0x0BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC4[0x4];                                      // 0x0BC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728_Default; // 0x0BC8(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586; // 0x0BE0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687; // 0x0BF8(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788; // 0x0C10(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930; // 0x0C28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2C[0x4];                                      // 0x0C2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829_Default; // 0x0C30(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889; // 0x0C48(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990; // 0x0C60(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091; // 0x0C78(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728293031; // 0x0C90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C94[0x4];                                      // 0x0C94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627282930_Default; // 0x0C98(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192; // 0x0CB0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293; // 0x0CC8(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394; // 0x0CE0(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829303132; // 0x0CF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CFC[0x4];                                      // 0x0CFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728293031_Default; // 0x0D00(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495; // 0x0D18(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596; // 0x0D30(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697; // 0x0D48(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930313233; // 0x0D60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D64[0x4];                                      // 0x0D64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829303132_Default; // 0x0D68(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798; // 0x0D80(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899; // 0x0D98(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100; // 0x0DB0(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728293031323334; // 0x0DC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DCC[0x4];                                      // 0x0DCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627282930313233_Default; // 0x0DD0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101; // 0x0DE8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102; // 0x0E00(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103; // 0x0E18(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435; // 0x0E30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E34[0x4];                                      // 0x0E34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728293031323334_Default; // 0x0E38(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104; // 0x0E50(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105; // 0x0E68(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106; // 0x0E80(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536; // 0x0E98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9C[0x4];                                      // 0x0E9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829303132333435_Default; // 0x0EA0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107; // 0x0EB8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108; // 0x0ED0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109; // 0x0EE8(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637; // 0x0F00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F04[0x4];                                      // 0x0F04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627282930313233343536_Default; // 0x0F08(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110; // 0x0F20(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111; // 0x0F38(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112; // 0x0F50(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738; // 0x0F68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F6C[0x4];                                      // 0x0F6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728293031323334353637_Default; // 0x0F70(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113; // 0x0F88(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114; // 0x0FA0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115; // 0x0FB8(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839; // 0x0FD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD4[0x4];                                      // 0x0FD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738_Default; // 0x0FD8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116; // 0x0FF0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117; // 0x1008(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118; // 0x1020(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940; // 0x1038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103C[0x4];                                     // 0x103C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839_Default; // 0x1040(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119; // 0x1058(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120; // 0x1070(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121; // 0x1088(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041; // 0x10A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A4[0x4];                                     // 0x10A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940_Default; // 0x10A8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122; // 0x10C0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123; // 0x10D8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124; // 0x10F0(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142; // 0x1108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_110C[0x4];                                     // 0x110C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041_Default; // 0x1110(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125; // 0x1128(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126; // 0x1140(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127; // 0x1158(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243; // 0x1170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1174[0x4];                                     // 0x1174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142_Default; // 0x1178(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128; // 0x1190(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129; // 0x11A8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130; // 0x11C0(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344; // 0x11D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11DC[0x4];                                     // 0x11DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243_Default; // 0x11E0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131; // 0x11F8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132; // 0x1210(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133; // 0x1228(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445; // 0x1240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1244[0x4];                                     // 0x1244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344_Default; // 0x1248(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134; // 0x1260(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135; // 0x1278(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136; // 0x1290(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546; // 0x12A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12AC[0x4];                                     // 0x12AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445_Default; // 0x12B0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137; // 0x12C8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138; // 0x12E0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139; // 0x12F8(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647; // 0x1310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1314[0x4];                                     // 0x1314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546_Default; // 0x1318(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140; // 0x1330(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141; // 0x1348(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142; // 0x1360(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748; // 0x1378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_137C[0x4];                                     // 0x137C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647_Default; // 0x1380(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143; // 0x1398(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144; // 0x13B0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145; // 0x13C8(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849; // 0x13E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E4[0x4];                                     // 0x13E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748_Default; // 0x13E8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146; // 0x1400(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147; // 0x1418(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148; // 0x1430(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950; // 0x1448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144C[0x4];                                     // 0x144C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849_Default; // 0x1450(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149; // 0x1468(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150; // 0x1480(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151; // 0x1498(0x0018)()
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950_Default; // 0x14B0(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x14C8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x14E0(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x14F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051_Default; // 0x14F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14FA[0x6];                                     // 0x14FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue1;                     // 0x1500(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue1;             // 0x1518(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue1;         // 0x1530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152_Default; // 0x1531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1532[0x6];                                     // 0x1532(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue12;            // 0x1538(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue123;           // 0x1550(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue1234;          // 0x1568(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue12345;         // 0x1580(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue12;                    // 0x1598(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue123;                   // 0x15B0(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue12;        // 0x15C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue123;       // 0x15C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253_Default; // 0x15CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354_Default; // 0x15CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15CC[0x4];                                     // 0x15CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue1234;                  // 0x15D0(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue12345;                 // 0x15E8(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue1234;      // 0x1600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue12345;     // 0x1601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455_Default; // 0x1602(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556_Default; // 0x1603(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1604[0x4];                                     // 0x1604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152; // 0x1608(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153; // 0x1620(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051; // 0x1638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_163C[0x4];                                     // 0x163C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657_Default; // 0x1640(0x0018)()
};
static_assert(alignof(GamepadMappingInfo_C_HandleConfigChanged_Athena) == 0x000008, "Wrong alignment on GamepadMappingInfo_C_HandleConfigChanged_Athena");
static_assert(sizeof(GamepadMappingInfo_C_HandleConfigChanged_Athena) == 0x001658, "Wrong size on GamepadMappingInfo_C_HandleConfigChanged_Athena");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Mode) == 0x000000, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Mode' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Config) == 0x000004, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Config' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable) == 0x000008, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_SwitchInteger_CmpSuccess) == 0x000020, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable) == 0x000024, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1) == 0x000028, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12) == 0x000040, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123) == 0x000058, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_bool_Variable) == 0x000070, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select_Default) == 0x000078, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable) == 0x000090, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable1) == 0x000091, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1) == 0x000094, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234) == 0x000098, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345) == 0x0000B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_bool_Variable1) == 0x0000C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable12) == 0x0000C9, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1_Default) == 0x0000D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable123) == 0x0000E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12) == 0x0000EC, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456) == 0x0000F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567) == 0x000108, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678) == 0x000120, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123) == 0x000138, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12_Default) == 0x000140, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789) == 0x000158, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910) == 0x000170, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011) == 0x000188, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234) == 0x0001A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123_Default) == 0x0001A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112) == 0x0001C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213) == 0x0001D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_bool_Variable12) == 0x0001F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_bool_Variable12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234_Default) == 0x0001F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable1234) == 0x000210, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable1234' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable12345) == 0x000211, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable12345' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_bool_Variable123) == 0x000212, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_bool_Variable123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable123456) == 0x000213, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable123456' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable1234567) == 0x000214, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable1234567' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_bool_Variable1234) == 0x000215, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_bool_Variable1234' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable12345678) == 0x000216, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable12345678' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable123456789) == 0x000217, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable123456789' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_bool_Variable12345) == 0x000218, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_bool_Variable12345' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable12345678910) == 0x000219, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable12345678910' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable1234567891011) == 0x00021A, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable1234567891011' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345) == 0x00021C, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314) == 0x000220, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415) == 0x000238, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516) == 0x000250, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456) == 0x000268, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345_Default) == 0x000270, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617) == 0x000288, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718) == 0x0002A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819) == 0x0002B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234567) == 0x0002D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234567' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456_Default) == 0x0002D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920) == 0x0002F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021) == 0x000308, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122) == 0x000320, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345678) == 0x000338, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345678' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567_Default) == 0x000340, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223) == 0x000358, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324) == 0x000370, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425) == 0x000388, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456789) == 0x0003A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456789' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678_Default) == 0x0003A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526) == 0x0003C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627) == 0x0003D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728) == 0x0003F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345678910) == 0x000408, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345678910' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789_Default) == 0x000410, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829) == 0x000428, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930) == 0x000440, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031) == 0x000458, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234567891011) == 0x000470, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234567891011' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910_Default) == 0x000478, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132) == 0x000490, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233) == 0x0004A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334) == 0x0004C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456789101112) == 0x0004D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456789101112' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011_Default) == 0x0004E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435) == 0x0004F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536) == 0x000510, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637) == 0x000528, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345678910111213) == 0x000540, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345678910111213' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112_Default) == 0x000548, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738) == 0x000560, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839) == 0x000578, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940) == 0x000590, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234567891011121314) == 0x0005A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234567891011121314' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910111213_Default) == 0x0005B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910111213_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041) == 0x0005C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142) == 0x0005E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243) == 0x0005F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456789101112131415) == 0x000610, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456789101112131415' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011121314_Default) == 0x000618, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011121314_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344) == 0x000630, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445) == 0x000648, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546) == 0x000660, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345678910111213141516) == 0x000678, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345678910111213141516' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112131415_Default) == 0x000680, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112131415_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647) == 0x000698, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748) == 0x0006B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849) == 0x0006C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234567891011121314151617) == 0x0006E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234567891011121314151617' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910111213141516_Default) == 0x0006E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910111213141516_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950) == 0x000700, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051) == 0x000718, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152) == 0x000730, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456789101112131415161718) == 0x000748, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456789101112131415161718' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011121314151617_Default) == 0x000750, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011121314151617_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253) == 0x000768, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354) == 0x000780, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455) == 0x000798, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345678910111213141516171819) == 0x0007B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345678910111213141516171819' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112131415161718_Default) == 0x0007B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112131415161718_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556) == 0x0007D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657) == 0x0007E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758) == 0x000800, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234567891011121314151617181920) == 0x000818, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234567891011121314151617181920' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910111213141516171819_Default) == 0x000820, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910111213141516171819_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859) == 0x000838, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960) == 0x000850, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061) == 0x000868, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456789101112131415161718192021) == 0x000880, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456789101112131415161718192021' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011121314151617181920_Default) == 0x000888, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011121314151617181920_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162) == 0x0008A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263) == 0x0008B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364) == 0x0008D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345678910111213141516171819202122) == 0x0008E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345678910111213141516171819202122' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112131415161718192021_Default) == 0x0008F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112131415161718192021_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465) == 0x000908, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566) == 0x000920, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667) == 0x000938, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234567891011121314151617181920212223) == 0x000950, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234567891011121314151617181920212223' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910111213141516171819202122_Default) == 0x000958, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910111213141516171819202122_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768) == 0x000970, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869) == 0x000988, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970) == 0x0009A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456789101112131415161718192021222324) == 0x0009B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456789101112131415161718192021222324' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011121314151617181920212223_Default) == 0x0009C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011121314151617181920212223_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071) == 0x0009D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172) == 0x0009F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273) == 0x000A08, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345678910111213141516171819202122232425) == 0x000A20, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345678910111213141516171819202122232425' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112131415161718192021222324_Default) == 0x000A28, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112131415161718192021222324_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374) == 0x000A40, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475) == 0x000A58, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576) == 0x000A70, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234567891011121314151617181920212223242526) == 0x000A88, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234567891011121314151617181920212223242526' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910111213141516171819202122232425_Default) == 0x000A90, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910111213141516171819202122232425_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677) == 0x000AA8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778) == 0x000AC0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879) == 0x000AD8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456789101112131415161718192021222324252627) == 0x000AF0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456789101112131415161718192021222324252627' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011121314151617181920212223242526_Default) == 0x000AF8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011121314151617181920212223242526_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980) == 0x000B10, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081) == 0x000B28, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182) == 0x000B40, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345678910111213141516171819202122232425262728) == 0x000B58, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345678910111213141516171819202122232425262728' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112131415161718192021222324252627_Default) == 0x000B60, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112131415161718192021222324252627_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283) == 0x000B78, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384) == 0x000B90, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485) == 0x000BA8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234567891011121314151617181920212223242526272829) == 0x000BC0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234567891011121314151617181920212223242526272829' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910111213141516171819202122232425262728_Default) == 0x000BC8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910111213141516171819202122232425262728_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586) == 0x000BE0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687) == 0x000BF8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788) == 0x000C10, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456789101112131415161718192021222324252627282930) == 0x000C28, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456789101112131415161718192021222324252627282930' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011121314151617181920212223242526272829_Default) == 0x000C30, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011121314151617181920212223242526272829_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889) == 0x000C48, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990) == 0x000C60, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091) == 0x000C78, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345678910111213141516171819202122232425262728293031) == 0x000C90, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345678910111213141516171819202122232425262728293031' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112131415161718192021222324252627282930_Default) == 0x000C98, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112131415161718192021222324252627282930_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192) == 0x000CB0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293) == 0x000CC8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394) == 0x000CE0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234567891011121314151617181920212223242526272829303132) == 0x000CF8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234567891011121314151617181920212223242526272829303132' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910111213141516171819202122232425262728293031_Default) == 0x000D00, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910111213141516171819202122232425262728293031_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495) == 0x000D18, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596) == 0x000D30, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697) == 0x000D48, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456789101112131415161718192021222324252627282930313233) == 0x000D60, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456789101112131415161718192021222324252627282930313233' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011121314151617181920212223242526272829303132_Default) == 0x000D68, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011121314151617181920212223242526272829303132_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798) == 0x000D80, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899) == 0x000D98, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100) == 0x000DB0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345678910111213141516171819202122232425262728293031323334) == 0x000DC8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345678910111213141516171819202122232425262728293031323334' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112131415161718192021222324252627282930313233_Default) == 0x000DD0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112131415161718192021222324252627282930313233_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101) == 0x000DE8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102) == 0x000E00, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103) == 0x000E18, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435) == 0x000E30, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910111213141516171819202122232425262728293031323334_Default) == 0x000E38, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910111213141516171819202122232425262728293031323334_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104) == 0x000E50, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105) == 0x000E68, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106) == 0x000E80, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536) == 0x000E98, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011121314151617181920212223242526272829303132333435_Default) == 0x000EA0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011121314151617181920212223242526272829303132333435_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107) == 0x000EB8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108) == 0x000ED0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109) == 0x000EE8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637) == 0x000F00, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112131415161718192021222324252627282930313233343536_Default) == 0x000F08, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112131415161718192021222324252627282930313233343536_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110) == 0x000F20, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111) == 0x000F38, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112) == 0x000F50, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738) == 0x000F68, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910111213141516171819202122232425262728293031323334353637_Default) == 0x000F70, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910111213141516171819202122232425262728293031323334353637_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113) == 0x000F88, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114) == 0x000FA0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115) == 0x000FB8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839) == 0x000FD0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738_Default) == 0x000FD8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116) == 0x000FF0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117) == 0x001008, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118) == 0x001020, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940) == 0x001038, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839_Default) == 0x001040, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119) == 0x001058, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120) == 0x001070, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121) == 0x001088, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041) == 0x0010A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940_Default) == 0x0010A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122) == 0x0010C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123) == 0x0010D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124) == 0x0010F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142) == 0x001108, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041_Default) == 0x001110, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125) == 0x001128, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126) == 0x001140, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127) == 0x001158, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243) == 0x001170, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142_Default) == 0x001178, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128) == 0x001190, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129) == 0x0011A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130) == 0x0011C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344) == 0x0011D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243_Default) == 0x0011E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131) == 0x0011F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132) == 0x001210, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133) == 0x001228, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445) == 0x001240, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344_Default) == 0x001248, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134) == 0x001260, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135) == 0x001278, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136) == 0x001290, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546) == 0x0012A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445_Default) == 0x0012B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137) == 0x0012C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138) == 0x0012E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139) == 0x0012F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647) == 0x001310, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546_Default) == 0x001318, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140) == 0x001330, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141) == 0x001348, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142) == 0x001360, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748) == 0x001378, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647_Default) == 0x001380, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143) == 0x001398, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144) == 0x0013B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145) == 0x0013C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849) == 0x0013E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748_Default) == 0x0013E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146) == 0x001400, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147) == 0x001418, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148) == 0x001430, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950) == 0x001448, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849_Default) == 0x001450, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149) == 0x001468, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150) == 0x001480, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151) == 0x001498, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950_Default) == 0x0014B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_GetText_ReturnValue) == 0x0014C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_MakeLiteralText_ReturnValue) == 0x0014E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_EqualEqual_TextText_ReturnValue) == 0x0014F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051_Default) == 0x0014F9, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_GetText_ReturnValue1) == 0x001500, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_GetText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_MakeLiteralText_ReturnValue1) == 0x001518, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_MakeLiteralText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_EqualEqual_TextText_ReturnValue1) == 0x001530, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_EqualEqual_TextText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152_Default) == 0x001531, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_MakeLiteralText_ReturnValue12) == 0x001538, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_MakeLiteralText_ReturnValue12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_MakeLiteralText_ReturnValue123) == 0x001550, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_MakeLiteralText_ReturnValue123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_MakeLiteralText_ReturnValue1234) == 0x001568, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_MakeLiteralText_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_MakeLiteralText_ReturnValue12345) == 0x001580, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_MakeLiteralText_ReturnValue12345' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_GetText_ReturnValue12) == 0x001598, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_GetText_ReturnValue12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_GetText_ReturnValue123) == 0x0015B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_GetText_ReturnValue123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_EqualEqual_TextText_ReturnValue12) == 0x0015C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_EqualEqual_TextText_ReturnValue12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_EqualEqual_TextText_ReturnValue123) == 0x0015C9, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_EqualEqual_TextText_ReturnValue123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253_Default) == 0x0015CA, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354_Default) == 0x0015CB, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_GetText_ReturnValue1234) == 0x0015D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_GetText_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_GetText_ReturnValue12345) == 0x0015E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_GetText_ReturnValue12345' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_EqualEqual_TextText_ReturnValue1234) == 0x001600, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_EqualEqual_TextText_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_EqualEqual_TextText_ReturnValue12345) == 0x001601, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_EqualEqual_TextText_ReturnValue12345' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455_Default) == 0x001602, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556_Default) == 0x001603, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152) == 0x001608, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153) == 0x001620, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051) == 0x001638, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657_Default) == 0x001640, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657_Default' has a wrong offset!");

// Function GamepadMappingInfo.GamepadMappingInfo_C.HandleConfigChanged
// 0x11E8 (0x11E8 - 0x0000)
struct GamepadMappingInfo_C_HandleConfigChanged final
{
public:
	int32                                         Mode;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Config;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	class FText                                   Temp_text_Variable1;                               // 0x0028(0x0018)()
	int32                                         Temp_int_Variable1;                                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable12;                              // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable123;                             // 0x0078(0x0018)()
	int32                                         Temp_int_Variable12;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1_Default;                            // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable1234;                            // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable12345;                           // 0x00C8(0x0018)()
	int32                                         Temp_int_Variable123;                              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12_Default;                           // 0x00E8(0x0018)()
	class FText                                   Temp_text_Variable123456;                          // 0x0100(0x0018)()
	class FText                                   Temp_text_Variable1234567;                         // 0x0118(0x0018)()
	int32                                         Temp_int_Variable1234;                             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123_Default;                          // 0x0138(0x0018)()
	class FText                                   Temp_text_Variable12345678;                        // 0x0150(0x0018)()
	class FText                                   Temp_text_Variable123456789;                       // 0x0168(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234_Default;                         // 0x0188(0x0018)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A2[0x2];                                      // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable12345;                            // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable12345678910;                     // 0x01A8(0x0018)()
	class FText                                   Temp_text_Variable1234567891011;                   // 0x01C0(0x0018)()
	int32                                         Temp_int_Variable123456;                           // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345_Default;                        // 0x01E0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112;                 // 0x01F8(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213;               // 0x0210(0x0018)()
	bool                                          Temp_bool_Variable1;                               // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456_Default;                       // 0x0230(0x0018)()
	ESlateVisibility                              Temp_byte_Variable12;                              // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable123;                             // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable12;                              // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable1234;                            // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable12345;                           // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable123;                             // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable123456;                          // 0x024E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1234567;                         // 0x024F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1234;                            // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable12345678;                        // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable123456789;                       // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable12345;                           // 0x0253(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable12345678910;                     // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1234567891011;                   // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_256[0x2];                                      // 0x0256(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1234567;                          // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable1234567891011121314;             // 0x0260(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415;           // 0x0278(0x0018)()
	int32                                         Temp_int_Variable12345678;                         // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567_Default;                      // 0x0298(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516;         // 0x02B0(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617;       // 0x02C8(0x0018)()
	int32                                         Temp_int_Variable123456789;                        // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678_Default;                     // 0x02E8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718;     // 0x0300(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819;   // 0x0318(0x0018)()
	int32                                         Temp_int_Variable12345678910;                      // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789_Default;                    // 0x0338(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920; // 0x0350(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021; // 0x0368(0x0018)()
	int32                                         Temp_int_Variable1234567891011;                    // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910_Default;                  // 0x0388(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122; // 0x03A0(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223; // 0x03B8(0x0018)()
	int32                                         Temp_int_Variable123456789101112;                  // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011_Default;                // 0x03D8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324; // 0x03F0(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425; // 0x0408(0x0018)()
	int32                                         Temp_int_Variable12345678910111213;                // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112_Default;              // 0x0428(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526; // 0x0440(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627; // 0x0458(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314;              // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213_Default;            // 0x0478(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728; // 0x0490(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829; // 0x04A8(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415;            // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314_Default;          // 0x04C8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930; // 0x04E0(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031; // 0x04F8(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516;          // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415_Default;        // 0x0518(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132; // 0x0530(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233; // 0x0548(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617;        // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516_Default;      // 0x0568(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334; // 0x0580(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435; // 0x0598(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718;      // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B4[0x4];                                      // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617_Default;    // 0x05B8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536; // 0x05D0(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637; // 0x05E8(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819;    // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718_Default;  // 0x0608(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738; // 0x0620(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839; // 0x0638(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920;  // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819_Default; // 0x0658(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940; // 0x0670(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041; // 0x0688(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021; // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A4[0x4];                                      // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920_Default; // 0x06A8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142; // 0x06C0(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243; // 0x06D8(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122; // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F4[0x4];                                      // 0x06F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021_Default; // 0x06F8(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344; // 0x0710(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445; // 0x0728(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223; // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_744[0x4];                                      // 0x0744(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122_Default; // 0x0748(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546; // 0x0760(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647; // 0x0778(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324; // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_794[0x4];                                      // 0x0794(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223_Default; // 0x0798(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748; // 0x07B0(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849; // 0x07C8(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425; // 0x07E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E4[0x4];                                      // 0x07E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324_Default; // 0x07E8(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950; // 0x0800(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051; // 0x0818(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526; // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_834[0x4];                                      // 0x0834(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425_Default; // 0x0838(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152; // 0x0850(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253; // 0x0868(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627; // 0x0880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_884[0x4];                                      // 0x0884(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526_Default; // 0x0888(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354; // 0x08A0(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455; // 0x08B8(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728; // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D4[0x4];                                      // 0x08D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627_Default; // 0x08D8(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556; // 0x08F0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657; // 0x0908(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829; // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_924[0x4];                                      // 0x0924(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728_Default; // 0x0928(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758; // 0x0940(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859; // 0x0958(0x0018)()
	bool                                          Temp_bool_Variable123456;                          // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_971[0x7];                                      // 0x0971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829_Default; // 0x0978(0x0018)()
	ESlateVisibility                              Temp_byte_Variable123456789101112;                 // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable12345678910111213;               // 0x0991(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_992[0x2];                                      // 0x0992(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930; // 0x0994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960; // 0x0998(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061; // 0x09B0(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728293031; // 0x09C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9CC[0x4];                                      // 0x09CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627282930_Default; // 0x09D0(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162; // 0x09E8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263; // 0x0A00(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829303132; // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1C[0x4];                                      // 0x0A1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728293031_Default; // 0x0A20(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364; // 0x0A38(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465; // 0x0A50(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930313233; // 0x0A68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6C[0x4];                                      // 0x0A6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829303132_Default; // 0x0A70(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566; // 0x0A88(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667; // 0x0AA0(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728293031323334; // 0x0AB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ABC[0x4];                                      // 0x0ABC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627282930313233_Default; // 0x0AC0(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768; // 0x0AD8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869; // 0x0AF0(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435; // 0x0B08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B0C[0x4];                                      // 0x0B0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728293031323334_Default; // 0x0B10(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970; // 0x0B28(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071; // 0x0B40(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536; // 0x0B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5C[0x4];                                      // 0x0B5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829303132333435_Default; // 0x0B60(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172; // 0x0B78(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273; // 0x0B90(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637; // 0x0BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BAC[0x4];                                      // 0x0BAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627282930313233343536_Default; // 0x0BB0(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374; // 0x0BC8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475; // 0x0BE0(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738; // 0x0BF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BFC[0x4];                                      // 0x0BFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728293031323334353637_Default; // 0x0C00(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576; // 0x0C18(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677; // 0x0C30(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839; // 0x0C48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4C[0x4];                                      // 0x0C4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738_Default; // 0x0C50(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778; // 0x0C68(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879; // 0x0C80(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940; // 0x0C98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9C[0x4];                                      // 0x0C9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839_Default; // 0x0CA0(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980; // 0x0CB8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081; // 0x0CD0(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041; // 0x0CE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CEC[0x4];                                      // 0x0CEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940_Default; // 0x0CF0(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182; // 0x0D08(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283; // 0x0D20(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142; // 0x0D38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3C[0x4];                                      // 0x0D3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041_Default; // 0x0D40(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384; // 0x0D58(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485; // 0x0D70(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243; // 0x0D88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8C[0x4];                                      // 0x0D8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142_Default; // 0x0D90(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586; // 0x0DA8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687; // 0x0DC0(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344; // 0x0DD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DDC[0x4];                                      // 0x0DDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243_Default; // 0x0DE0(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788; // 0x0DF8(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889; // 0x0E10(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445; // 0x0E28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2C[0x4];                                      // 0x0E2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344_Default; // 0x0E30(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990; // 0x0E48(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091; // 0x0E60(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546; // 0x0E78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E7C[0x4];                                      // 0x0E7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445_Default; // 0x0E80(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192; // 0x0E98(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293; // 0x0EB0(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647; // 0x0EC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ECC[0x4];                                      // 0x0ECC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546_Default; // 0x0ED0(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394; // 0x0EE8(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495; // 0x0F00(0x0018)()
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748; // 0x0F18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1C[0x4];                                      // 0x0F1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647_Default; // 0x0F20(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596; // 0x0F38(0x0018)()
	class FText                                   Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697; // 0x0F50(0x0018)()
	int32                                         Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849; // 0x0F68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F6C[0x4];                                      // 0x0F6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748_Default; // 0x0F70(0x0018)()
	class FText                                   Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798; // 0x0F88(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899; // 0x0FA0(0x0018)()
	int32                                         Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950; // 0x0FB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FBC[0x4];                                      // 0x0FBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849_Default; // 0x0FC0(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100; // 0x0FD8(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101; // 0x0FF0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x1008(0x0018)()
	class FText                                   K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950_Default; // 0x1020(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x1038(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue1;             // 0x1050(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x1068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051_Default; // 0x1069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_106A[0x6];                                     // 0x106A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue12;            // 0x1070(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue123;           // 0x1088(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue1234;          // 0x10A0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue12345;         // 0x10B8(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue1;                     // 0x10D0(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue12;                    // 0x10E8(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue1;         // 0x1100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue12;        // 0x1101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152_Default; // 0x1102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253_Default; // 0x1103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1104[0x4];                                     // 0x1104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue123;                   // 0x1108(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue1234;                  // 0x1120(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue123;       // 0x1138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue1234;      // 0x1139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354_Default; // 0x113A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455_Default; // 0x113B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_113C[0x4];                                     // 0x113C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue12345;                 // 0x1140(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue123456;                // 0x1158(0x0018)()
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102; // 0x1170(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue12345;     // 0x1188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556_Default; // 0x1189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118A[0x6];                                     // 0x118A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103; // 0x1190(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue123456;        // 0x11A8(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue123456;    // 0x11C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11C1[0x3];                                     // 0x11C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051; // 0x11C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657_Default; // 0x11C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C9[0x7];                                     // 0x11C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758_Default; // 0x11D0(0x0018)()
};
static_assert(alignof(GamepadMappingInfo_C_HandleConfigChanged) == 0x000008, "Wrong alignment on GamepadMappingInfo_C_HandleConfigChanged");
static_assert(sizeof(GamepadMappingInfo_C_HandleConfigChanged) == 0x0011E8, "Wrong size on GamepadMappingInfo_C_HandleConfigChanged");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Mode) == 0x000000, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Mode' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Config) == 0x000004, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Config' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable) == 0x000008, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_SwitchInteger_CmpSuccess) == 0x00000C, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable) == 0x000010, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1) == 0x000028, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1) == 0x000040, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select_Default) == 0x000048, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12) == 0x000060, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123) == 0x000078, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12) == 0x000090, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1_Default) == 0x000098, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234) == 0x0000B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345) == 0x0000C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123) == 0x0000E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12_Default) == 0x0000E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456) == 0x000100, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567) == 0x000118, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234) == 0x000130, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123_Default) == 0x000138, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678) == 0x000150, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789) == 0x000168, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_bool_Variable) == 0x000180, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234_Default) == 0x000188, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable) == 0x0001A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable1) == 0x0001A1, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345) == 0x0001A4, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910) == 0x0001A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011) == 0x0001C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456) == 0x0001D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345_Default) == 0x0001E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112) == 0x0001F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213) == 0x000210, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_bool_Variable1) == 0x000228, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456_Default) == 0x000230, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable12) == 0x000248, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable123) == 0x000249, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_bool_Variable12) == 0x00024A, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_bool_Variable12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable1234) == 0x00024B, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable1234' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable12345) == 0x00024C, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable12345' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_bool_Variable123) == 0x00024D, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_bool_Variable123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable123456) == 0x00024E, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable123456' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable1234567) == 0x00024F, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable1234567' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_bool_Variable1234) == 0x000250, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_bool_Variable1234' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable12345678) == 0x000251, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable12345678' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable123456789) == 0x000252, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable123456789' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_bool_Variable12345) == 0x000253, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_bool_Variable12345' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable12345678910) == 0x000254, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable12345678910' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable1234567891011) == 0x000255, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable1234567891011' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234567) == 0x000258, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234567' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314) == 0x000260, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415) == 0x000278, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345678) == 0x000290, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345678' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567_Default) == 0x000298, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516) == 0x0002B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617) == 0x0002C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456789) == 0x0002E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456789' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678_Default) == 0x0002E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718) == 0x000300, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819) == 0x000318, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345678910) == 0x000330, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345678910' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789_Default) == 0x000338, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920) == 0x000350, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021) == 0x000368, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234567891011) == 0x000380, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234567891011' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910_Default) == 0x000388, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122) == 0x0003A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223) == 0x0003B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456789101112) == 0x0003D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456789101112' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011_Default) == 0x0003D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324) == 0x0003F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425) == 0x000408, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345678910111213) == 0x000420, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345678910111213' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112_Default) == 0x000428, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526) == 0x000440, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627) == 0x000458, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234567891011121314) == 0x000470, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234567891011121314' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213_Default) == 0x000478, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728) == 0x000490, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829) == 0x0004A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456789101112131415) == 0x0004C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456789101112131415' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011121314_Default) == 0x0004C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011121314_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930) == 0x0004E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031) == 0x0004F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345678910111213141516) == 0x000510, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345678910111213141516' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112131415_Default) == 0x000518, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112131415_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132) == 0x000530, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233) == 0x000548, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234567891011121314151617) == 0x000560, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234567891011121314151617' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213141516_Default) == 0x000568, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213141516_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334) == 0x000580, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435) == 0x000598, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456789101112131415161718) == 0x0005B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456789101112131415161718' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011121314151617_Default) == 0x0005B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011121314151617_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536) == 0x0005D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637) == 0x0005E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345678910111213141516171819) == 0x000600, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345678910111213141516171819' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112131415161718_Default) == 0x000608, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112131415161718_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738) == 0x000620, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839) == 0x000638, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234567891011121314151617181920) == 0x000650, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234567891011121314151617181920' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213141516171819_Default) == 0x000658, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213141516171819_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940) == 0x000670, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041) == 0x000688, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456789101112131415161718192021) == 0x0006A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456789101112131415161718192021' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011121314151617181920_Default) == 0x0006A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011121314151617181920_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142) == 0x0006C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243) == 0x0006D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345678910111213141516171819202122) == 0x0006F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345678910111213141516171819202122' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112131415161718192021_Default) == 0x0006F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112131415161718192021_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344) == 0x000710, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445) == 0x000728, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234567891011121314151617181920212223) == 0x000740, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234567891011121314151617181920212223' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213141516171819202122_Default) == 0x000748, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213141516171819202122_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546) == 0x000760, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647) == 0x000778, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456789101112131415161718192021222324) == 0x000790, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456789101112131415161718192021222324' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011121314151617181920212223_Default) == 0x000798, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011121314151617181920212223_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748) == 0x0007B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849) == 0x0007C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345678910111213141516171819202122232425) == 0x0007E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345678910111213141516171819202122232425' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112131415161718192021222324_Default) == 0x0007E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112131415161718192021222324_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950) == 0x000800, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051) == 0x000818, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234567891011121314151617181920212223242526) == 0x000830, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234567891011121314151617181920212223242526' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213141516171819202122232425_Default) == 0x000838, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213141516171819202122232425_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152) == 0x000850, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253) == 0x000868, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456789101112131415161718192021222324252627) == 0x000880, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456789101112131415161718192021222324252627' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011121314151617181920212223242526_Default) == 0x000888, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011121314151617181920212223242526_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354) == 0x0008A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455) == 0x0008B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345678910111213141516171819202122232425262728) == 0x0008D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345678910111213141516171819202122232425262728' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112131415161718192021222324252627_Default) == 0x0008D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112131415161718192021222324252627_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556) == 0x0008F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657) == 0x000908, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234567891011121314151617181920212223242526272829) == 0x000920, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234567891011121314151617181920212223242526272829' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213141516171819202122232425262728_Default) == 0x000928, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213141516171819202122232425262728_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758) == 0x000940, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859) == 0x000958, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_bool_Variable123456) == 0x000970, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_bool_Variable123456' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011121314151617181920212223242526272829_Default) == 0x000978, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011121314151617181920212223242526272829_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable123456789101112) == 0x000990, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable123456789101112' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable12345678910111213) == 0x000991, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable12345678910111213' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456789101112131415161718192021222324252627282930) == 0x000994, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456789101112131415161718192021222324252627282930' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960) == 0x000998, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061) == 0x0009B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345678910111213141516171819202122232425262728293031) == 0x0009C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345678910111213141516171819202122232425262728293031' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112131415161718192021222324252627282930_Default) == 0x0009D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112131415161718192021222324252627282930_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162) == 0x0009E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263) == 0x000A00, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234567891011121314151617181920212223242526272829303132) == 0x000A18, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234567891011121314151617181920212223242526272829303132' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213141516171819202122232425262728293031_Default) == 0x000A20, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213141516171819202122232425262728293031_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364) == 0x000A38, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465) == 0x000A50, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456789101112131415161718192021222324252627282930313233) == 0x000A68, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456789101112131415161718192021222324252627282930313233' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011121314151617181920212223242526272829303132_Default) == 0x000A70, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011121314151617181920212223242526272829303132_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566) == 0x000A88, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667) == 0x000AA0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345678910111213141516171819202122232425262728293031323334) == 0x000AB8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345678910111213141516171819202122232425262728293031323334' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112131415161718192021222324252627282930313233_Default) == 0x000AC0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112131415161718192021222324252627282930313233_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768) == 0x000AD8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869) == 0x000AF0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435) == 0x000B08, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213141516171819202122232425262728293031323334_Default) == 0x000B10, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213141516171819202122232425262728293031323334_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970) == 0x000B28, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071) == 0x000B40, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536) == 0x000B58, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011121314151617181920212223242526272829303132333435_Default) == 0x000B60, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011121314151617181920212223242526272829303132333435_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172) == 0x000B78, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273) == 0x000B90, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637) == 0x000BA8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112131415161718192021222324252627282930313233343536_Default) == 0x000BB0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112131415161718192021222324252627282930313233343536_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374) == 0x000BC8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475) == 0x000BE0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738) == 0x000BF8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213141516171819202122232425262728293031323334353637_Default) == 0x000C00, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213141516171819202122232425262728293031323334353637_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576) == 0x000C18, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677) == 0x000C30, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839) == 0x000C48, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738_Default) == 0x000C50, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778) == 0x000C68, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879) == 0x000C80, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940) == 0x000C98, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839_Default) == 0x000CA0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980) == 0x000CB8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081) == 0x000CD0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041) == 0x000CE8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940_Default) == 0x000CF0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182) == 0x000D08, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283) == 0x000D20, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142) == 0x000D38, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041_Default) == 0x000D40, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384) == 0x000D58, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485) == 0x000D70, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243) == 0x000D88, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142_Default) == 0x000D90, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586) == 0x000DA8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687) == 0x000DC0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344) == 0x000DD8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243_Default) == 0x000DE0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788) == 0x000DF8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889) == 0x000E10, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445) == 0x000E28, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344_Default) == 0x000E30, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990) == 0x000E48, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091) == 0x000E60, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546) == 0x000E78, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445_Default) == 0x000E80, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192) == 0x000E98, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293) == 0x000EB0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647) == 0x000EC8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546_Default) == 0x000ED0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394) == 0x000EE8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495) == 0x000F00, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748) == 0x000F18, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647_Default) == 0x000F20, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596) == 0x000F38, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697) == 0x000F50, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849) == 0x000F68, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748_Default) == 0x000F70, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798) == 0x000F88, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899) == 0x000FA0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950) == 0x000FB8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849_Default) == 0x000FC0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100) == 0x000FD8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101) == 0x000FF0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_MakeLiteralText_ReturnValue) == 0x001008, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950_Default) == 0x001020, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_GetText_ReturnValue) == 0x001038, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_MakeLiteralText_ReturnValue1) == 0x001050, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_MakeLiteralText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_EqualEqual_TextText_ReturnValue) == 0x001068, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051_Default) == 0x001069, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_MakeLiteralText_ReturnValue12) == 0x001070, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_MakeLiteralText_ReturnValue12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_MakeLiteralText_ReturnValue123) == 0x001088, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_MakeLiteralText_ReturnValue123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_MakeLiteralText_ReturnValue1234) == 0x0010A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_MakeLiteralText_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_MakeLiteralText_ReturnValue12345) == 0x0010B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_MakeLiteralText_ReturnValue12345' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_GetText_ReturnValue1) == 0x0010D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_GetText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_GetText_ReturnValue12) == 0x0010E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_GetText_ReturnValue12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_EqualEqual_TextText_ReturnValue1) == 0x001100, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_EqualEqual_TextText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_EqualEqual_TextText_ReturnValue12) == 0x001101, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_EqualEqual_TextText_ReturnValue12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152_Default) == 0x001102, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253_Default) == 0x001103, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_GetText_ReturnValue123) == 0x001108, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_GetText_ReturnValue123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_GetText_ReturnValue1234) == 0x001120, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_GetText_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_EqualEqual_TextText_ReturnValue123) == 0x001138, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_EqualEqual_TextText_ReturnValue123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_EqualEqual_TextText_ReturnValue1234) == 0x001139, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_EqualEqual_TextText_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354_Default) == 0x00113A, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455_Default) == 0x00113B, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_GetText_ReturnValue12345) == 0x001140, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_GetText_ReturnValue12345' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_GetText_ReturnValue123456) == 0x001158, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_GetText_ReturnValue123456' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102) == 0x001170, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_EqualEqual_TextText_ReturnValue12345) == 0x001188, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_EqualEqual_TextText_ReturnValue12345' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556_Default) == 0x001189, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103) == 0x001190, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_MakeLiteralText_ReturnValue123456) == 0x0011A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_MakeLiteralText_ReturnValue123456' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_EqualEqual_TextText_ReturnValue123456) == 0x0011C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_EqualEqual_TextText_ReturnValue123456' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051) == 0x0011C4, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657_Default) == 0x0011C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758_Default) == 0x0011D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758_Default' has a wrong offset!");

}

