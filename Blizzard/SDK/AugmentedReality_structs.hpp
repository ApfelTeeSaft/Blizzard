#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AugmentedReality

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum AugmentedReality.EARTrackingQuality
// NumValues: 0x0004
enum class EARTrackingQuality : uint8
{
	NotAvailable                             = 0,
	Limited                                  = 1,
	Normal                                   = 2,
	EARTrackingQuality_MAX                   = 3,
};

// ScriptStruct AugmentedReality.ARTraceResult
// 0x0050 (0x0050 - 0x0000)
struct FARTraceResult final
{
public:
	struct FTransform                             LocalToTrackingTransform;                          // 0x0000(0x0030)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	class UARTrackedGeometry*                     TrackedGeometry;                                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_38[0x18];                                      // 0x0038(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FARTraceResult) == 0x000010, "Wrong alignment on FARTraceResult");
static_assert(sizeof(FARTraceResult) == 0x000050, "Wrong size on FARTraceResult");
static_assert(offsetof(FARTraceResult, LocalToTrackingTransform) == 0x000000, "Member 'FARTraceResult::LocalToTrackingTransform' has a wrong offset!");
static_assert(offsetof(FARTraceResult, TrackedGeometry) == 0x000030, "Member 'FARTraceResult::TrackedGeometry' has a wrong offset!");

// ScriptStruct AugmentedReality.ARPin
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FARPin final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FARPin) == 0x000008, "Wrong alignment on FARPin");
static_assert(sizeof(FARPin) == 0x000010, "Wrong size on FARPin");

}

