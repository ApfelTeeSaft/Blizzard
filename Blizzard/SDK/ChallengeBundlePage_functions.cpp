#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeBundlePage

#include "Basic.hpp"

#include "ChallengeBundlePage_classes.hpp"
#include "ChallengeBundlePage_parameters.hpp"


namespace SDK
{

// Function ChallengeBundlePage.ChallengeBundlePage_C.ExecuteUbergraph_ChallengeBundlePage
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundlePage_C::ExecuteUbergraph_ChallengeBundlePage(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundlePage_C", "ExecuteUbergraph_ChallengeBundlePage");

	Params::ChallengeBundlePage_C_ExecuteUbergraph_ChallengeBundlePage Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeBundlePage.ChallengeBundlePage_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UChallengeBundlePage_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundlePage_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeBundlePage.ChallengeBundlePage_C.SetChallengeBundleItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortChallengeBundleItem*         InChallengeBundleItem                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundlePage_C::SetChallengeBundleItem(class UFortChallengeBundleItem* InChallengeBundleItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundlePage_C", "SetChallengeBundleItem");

	Params::ChallengeBundlePage_C_SetChallengeBundleItem Parms{};

	Parms.InChallengeBundleItem = InChallengeBundleItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeBundlePage.ChallengeBundlePage_C.UpdateQuests
// (Public, BlueprintCallable, BlueprintEvent)

void UChallengeBundlePage_C::UpdateQuests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundlePage_C", "UpdateQuests");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeBundlePage.ChallengeBundlePage_C.ClaimNextQuestReward
// (Public, BlueprintCallable, BlueprintEvent)

void UChallengeBundlePage_C::ClaimNextQuestReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundlePage_C", "ClaimNextQuestReward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeBundlePage.ChallengeBundlePage_C.RegisterEventListeners
// (Public, BlueprintCallable, BlueprintEvent)

void UChallengeBundlePage_C::RegisterEventListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundlePage_C", "RegisterEventListeners");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeBundlePage.ChallengeBundlePage_C.CreateDisabledQuestWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortQuestItemDefinition*         QuestDefinition                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundlePage_C::CreateDisabledQuestWidget(class UFortQuestItemDefinition* QuestDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundlePage_C", "CreateDisabledQuestWidget");

	Params::ChallengeBundlePage_C_CreateDisabledQuestWidget Parms{};

	Parms.QuestDefinition = QuestDefinition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeBundlePage.ChallengeBundlePage_C.CreateQuestWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundlePage_C::CreateQuestWidget(class UFortQuestItem* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundlePage_C", "CreateQuestWidget");

	Params::ChallengeBundlePage_C_CreateQuestWidget Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}

}

