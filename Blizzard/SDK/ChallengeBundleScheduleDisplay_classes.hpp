#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeBundleScheduleDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C
// 0x0060 (0x0460 - 0x0400)
class UChallengeBundleScheduleDisplay_C final : public UAthenaChallengeBundleScheduleScreenBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0400(0x0008)(Transient, DuplicateTransient)
	class UAthenaSectionPanelWithHeading_C*       AthenaSectionPanelWithHeading;                     // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  ChallengePageSwitcher;                             // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalTabList_C*                   ChallengePageTabList;                              // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortChallengeBundleScheduleItem*       BundleSchedule;                                    // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortChallengeBundleItem*>       ActiveChallengeBundles;                            // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UFortChallengeBundleItemDefinition*> UnlockableChallengeBundles;                    // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class FName                                   LastActiveTab;                                     // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bConstructed;                                      // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortChallengeBundleScheduleDefinition* BundleScheduleDef;                                 // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ChallengeBundleScheduleDisplay(int32 EntryPoint);
	void OnActivated();
	void OnDeactivated();
	void BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_12_OnTabButtonCreated__DelegateSignature(class FName TabId, class UCommonButton* TabButton);
	void BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_1_OnTabSelected__DelegateSignature(class FName TabId);
	void Construct();
	void SetBundle(class UFortChallengeBundleScheduleItem* BundleInstance, class UFortChallengeBundleScheduleDefinition* BundleScheduleDef_0);
	void UpdateTabs();
	void ResetTabs();
	void CreateTab(class UFortChallengeBundleItemDefinition* ChallengeDef, class UWidget* ContentWidget);
	void HandleTabCreated(class FName TabId, class UCommonButton* Button);
	void HandleTabSelected(class FName TabId);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChallengeBundleScheduleDisplay_C">();
	}
	static class UChallengeBundleScheduleDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallengeBundleScheduleDisplay_C>();
	}
};
static_assert(alignof(UChallengeBundleScheduleDisplay_C) == 0x000008, "Wrong alignment on UChallengeBundleScheduleDisplay_C");
static_assert(sizeof(UChallengeBundleScheduleDisplay_C) == 0x000460, "Wrong size on UChallengeBundleScheduleDisplay_C");
static_assert(offsetof(UChallengeBundleScheduleDisplay_C, UberGraphFrame) == 0x000400, "Member 'UChallengeBundleScheduleDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChallengeBundleScheduleDisplay_C, AthenaSectionPanelWithHeading) == 0x000408, "Member 'UChallengeBundleScheduleDisplay_C::AthenaSectionPanelWithHeading' has a wrong offset!");
static_assert(offsetof(UChallengeBundleScheduleDisplay_C, ChallengePageSwitcher) == 0x000410, "Member 'UChallengeBundleScheduleDisplay_C::ChallengePageSwitcher' has a wrong offset!");
static_assert(offsetof(UChallengeBundleScheduleDisplay_C, ChallengePageTabList) == 0x000418, "Member 'UChallengeBundleScheduleDisplay_C::ChallengePageTabList' has a wrong offset!");
static_assert(offsetof(UChallengeBundleScheduleDisplay_C, BundleSchedule) == 0x000420, "Member 'UChallengeBundleScheduleDisplay_C::BundleSchedule' has a wrong offset!");
static_assert(offsetof(UChallengeBundleScheduleDisplay_C, ActiveChallengeBundles) == 0x000428, "Member 'UChallengeBundleScheduleDisplay_C::ActiveChallengeBundles' has a wrong offset!");
static_assert(offsetof(UChallengeBundleScheduleDisplay_C, UnlockableChallengeBundles) == 0x000438, "Member 'UChallengeBundleScheduleDisplay_C::UnlockableChallengeBundles' has a wrong offset!");
static_assert(offsetof(UChallengeBundleScheduleDisplay_C, LastActiveTab) == 0x000448, "Member 'UChallengeBundleScheduleDisplay_C::LastActiveTab' has a wrong offset!");
static_assert(offsetof(UChallengeBundleScheduleDisplay_C, bConstructed) == 0x000450, "Member 'UChallengeBundleScheduleDisplay_C::bConstructed' has a wrong offset!");
static_assert(offsetof(UChallengeBundleScheduleDisplay_C, BundleScheduleDef) == 0x000458, "Member 'UChallengeBundleScheduleDisplay_C::BundleScheduleDef' has a wrong offset!");

}

