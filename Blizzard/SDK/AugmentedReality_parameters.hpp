#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AugmentedReality

#include "Basic.hpp"

#include "AugmentedReality_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AugmentedReality.ARBlueprintLibrary.DebugDrawTrackedGeometry
// 0x0028 (0x0028 - 0x0000)
struct ARBlueprintLibrary_DebugDrawTrackedGeometry final
{
public:
	class UARTrackedGeometry*                     TrackedGeometry;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                WorldContextObject;                                // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0010(0x0010)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutlineThickness;                                  // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PersistForSeconds;                                 // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ARBlueprintLibrary_DebugDrawTrackedGeometry) == 0x000008, "Wrong alignment on ARBlueprintLibrary_DebugDrawTrackedGeometry");
static_assert(sizeof(ARBlueprintLibrary_DebugDrawTrackedGeometry) == 0x000028, "Wrong size on ARBlueprintLibrary_DebugDrawTrackedGeometry");
static_assert(offsetof(ARBlueprintLibrary_DebugDrawTrackedGeometry, TrackedGeometry) == 0x000000, "Member 'ARBlueprintLibrary_DebugDrawTrackedGeometry::TrackedGeometry' has a wrong offset!");
static_assert(offsetof(ARBlueprintLibrary_DebugDrawTrackedGeometry, WorldContextObject) == 0x000008, "Member 'ARBlueprintLibrary_DebugDrawTrackedGeometry::WorldContextObject' has a wrong offset!");
static_assert(offsetof(ARBlueprintLibrary_DebugDrawTrackedGeometry, Color) == 0x000010, "Member 'ARBlueprintLibrary_DebugDrawTrackedGeometry::Color' has a wrong offset!");
static_assert(offsetof(ARBlueprintLibrary_DebugDrawTrackedGeometry, OutlineThickness) == 0x000020, "Member 'ARBlueprintLibrary_DebugDrawTrackedGeometry::OutlineThickness' has a wrong offset!");
static_assert(offsetof(ARBlueprintLibrary_DebugDrawTrackedGeometry, PersistForSeconds) == 0x000024, "Member 'ARBlueprintLibrary_DebugDrawTrackedGeometry::PersistForSeconds' has a wrong offset!");

// Function AugmentedReality.ARBlueprintLibrary.GetAllGeometries
// 0x0010 (0x0010 - 0x0000)
struct ARBlueprintLibrary_GetAllGeometries final
{
public:
	TArray<class UARTrackedGeometry*>             ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ARBlueprintLibrary_GetAllGeometries) == 0x000008, "Wrong alignment on ARBlueprintLibrary_GetAllGeometries");
static_assert(sizeof(ARBlueprintLibrary_GetAllGeometries) == 0x000010, "Wrong size on ARBlueprintLibrary_GetAllGeometries");
static_assert(offsetof(ARBlueprintLibrary_GetAllGeometries, ReturnValue) == 0x000000, "Member 'ARBlueprintLibrary_GetAllGeometries::ReturnValue' has a wrong offset!");

// Function AugmentedReality.ARBlueprintLibrary.GetLocalToTrackingTransform
// 0x0080 (0x0080 - 0x0000)
struct ARBlueprintLibrary_GetLocalToTrackingTransform final
{
public:
	struct FARTraceResult                         TraceResult;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FTransform                             ReturnValue;                                       // 0x0050(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ARBlueprintLibrary_GetLocalToTrackingTransform) == 0x000010, "Wrong alignment on ARBlueprintLibrary_GetLocalToTrackingTransform");
static_assert(sizeof(ARBlueprintLibrary_GetLocalToTrackingTransform) == 0x000080, "Wrong size on ARBlueprintLibrary_GetLocalToTrackingTransform");
static_assert(offsetof(ARBlueprintLibrary_GetLocalToTrackingTransform, TraceResult) == 0x000000, "Member 'ARBlueprintLibrary_GetLocalToTrackingTransform::TraceResult' has a wrong offset!");
static_assert(offsetof(ARBlueprintLibrary_GetLocalToTrackingTransform, ReturnValue) == 0x000050, "Member 'ARBlueprintLibrary_GetLocalToTrackingTransform::ReturnValue' has a wrong offset!");

// Function AugmentedReality.ARBlueprintLibrary.GetLocalToWorldTransform
// 0x0080 (0x0080 - 0x0000)
struct ARBlueprintLibrary_GetLocalToWorldTransform final
{
public:
	struct FARTraceResult                         TraceResult;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FTransform                             ReturnValue;                                       // 0x0050(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ARBlueprintLibrary_GetLocalToWorldTransform) == 0x000010, "Wrong alignment on ARBlueprintLibrary_GetLocalToWorldTransform");
static_assert(sizeof(ARBlueprintLibrary_GetLocalToWorldTransform) == 0x000080, "Wrong size on ARBlueprintLibrary_GetLocalToWorldTransform");
static_assert(offsetof(ARBlueprintLibrary_GetLocalToWorldTransform, TraceResult) == 0x000000, "Member 'ARBlueprintLibrary_GetLocalToWorldTransform::TraceResult' has a wrong offset!");
static_assert(offsetof(ARBlueprintLibrary_GetLocalToWorldTransform, ReturnValue) == 0x000050, "Member 'ARBlueprintLibrary_GetLocalToWorldTransform::ReturnValue' has a wrong offset!");

// Function AugmentedReality.ARBlueprintLibrary.GetTrackedGeometry
// 0x0060 (0x0060 - 0x0000)
struct ARBlueprintLibrary_GetTrackedGeometry final
{
public:
	struct FARTraceResult                         TraceResult;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UARTrackedGeometry*                     ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ARBlueprintLibrary_GetTrackedGeometry) == 0x000010, "Wrong alignment on ARBlueprintLibrary_GetTrackedGeometry");
static_assert(sizeof(ARBlueprintLibrary_GetTrackedGeometry) == 0x000060, "Wrong size on ARBlueprintLibrary_GetTrackedGeometry");
static_assert(offsetof(ARBlueprintLibrary_GetTrackedGeometry, TraceResult) == 0x000000, "Member 'ARBlueprintLibrary_GetTrackedGeometry::TraceResult' has a wrong offset!");
static_assert(offsetof(ARBlueprintLibrary_GetTrackedGeometry, ReturnValue) == 0x000050, "Member 'ARBlueprintLibrary_GetTrackedGeometry::ReturnValue' has a wrong offset!");

// Function AugmentedReality.ARBlueprintLibrary.GetTrackingQuality
// 0x0001 (0x0001 - 0x0000)
struct ARBlueprintLibrary_GetTrackingQuality final
{
public:
	EARTrackingQuality                            ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ARBlueprintLibrary_GetTrackingQuality) == 0x000001, "Wrong alignment on ARBlueprintLibrary_GetTrackingQuality");
static_assert(sizeof(ARBlueprintLibrary_GetTrackingQuality) == 0x000001, "Wrong size on ARBlueprintLibrary_GetTrackingQuality");
static_assert(offsetof(ARBlueprintLibrary_GetTrackingQuality, ReturnValue) == 0x000000, "Member 'ARBlueprintLibrary_GetTrackingQuality::ReturnValue' has a wrong offset!");

// Function AugmentedReality.ARBlueprintLibrary.IsARActive
// 0x0001 (0x0001 - 0x0000)
struct ARBlueprintLibrary_IsARActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ARBlueprintLibrary_IsARActive) == 0x000001, "Wrong alignment on ARBlueprintLibrary_IsARActive");
static_assert(sizeof(ARBlueprintLibrary_IsARActive) == 0x000001, "Wrong size on ARBlueprintLibrary_IsARActive");
static_assert(offsetof(ARBlueprintLibrary_IsARActive, ReturnValue) == 0x000000, "Member 'ARBlueprintLibrary_IsARActive::ReturnValue' has a wrong offset!");

// Function AugmentedReality.ARBlueprintLibrary.LineTraceTrackedObjects
// 0x0018 (0x0018 - 0x0000)
struct ARBlueprintLibrary_LineTraceTrackedObjects final
{
public:
	struct FVector2D                              ScreenCoord;                                       // 0x0000(0x0008)(ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FARTraceResult>                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ARBlueprintLibrary_LineTraceTrackedObjects) == 0x000008, "Wrong alignment on ARBlueprintLibrary_LineTraceTrackedObjects");
static_assert(sizeof(ARBlueprintLibrary_LineTraceTrackedObjects) == 0x000018, "Wrong size on ARBlueprintLibrary_LineTraceTrackedObjects");
static_assert(offsetof(ARBlueprintLibrary_LineTraceTrackedObjects, ScreenCoord) == 0x000000, "Member 'ARBlueprintLibrary_LineTraceTrackedObjects::ScreenCoord' has a wrong offset!");
static_assert(offsetof(ARBlueprintLibrary_LineTraceTrackedObjects, ReturnValue) == 0x000008, "Member 'ARBlueprintLibrary_LineTraceTrackedObjects::ReturnValue' has a wrong offset!");

// Function AugmentedReality.ARBlueprintLibrary.StartAR
// 0x0001 (0x0001 - 0x0000)
struct ARBlueprintLibrary_StartAR final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ARBlueprintLibrary_StartAR) == 0x000001, "Wrong alignment on ARBlueprintLibrary_StartAR");
static_assert(sizeof(ARBlueprintLibrary_StartAR) == 0x000001, "Wrong size on ARBlueprintLibrary_StartAR");
static_assert(offsetof(ARBlueprintLibrary_StartAR, ReturnValue) == 0x000000, "Member 'ARBlueprintLibrary_StartAR::ReturnValue' has a wrong offset!");

// Function AugmentedReality.ARPlaneGeometry.GetCenter
// 0x000C (0x000C - 0x0000)
struct ARPlaneGeometry_GetCenter final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ARPlaneGeometry_GetCenter) == 0x000004, "Wrong alignment on ARPlaneGeometry_GetCenter");
static_assert(sizeof(ARPlaneGeometry_GetCenter) == 0x00000C, "Wrong size on ARPlaneGeometry_GetCenter");
static_assert(offsetof(ARPlaneGeometry_GetCenter, ReturnValue) == 0x000000, "Member 'ARPlaneGeometry_GetCenter::ReturnValue' has a wrong offset!");

// Function AugmentedReality.ARPlaneGeometry.GetExtent
// 0x000C (0x000C - 0x0000)
struct ARPlaneGeometry_GetExtent final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ARPlaneGeometry_GetExtent) == 0x000004, "Wrong alignment on ARPlaneGeometry_GetExtent");
static_assert(sizeof(ARPlaneGeometry_GetExtent) == 0x00000C, "Wrong size on ARPlaneGeometry_GetExtent");
static_assert(offsetof(ARPlaneGeometry_GetExtent, ReturnValue) == 0x000000, "Member 'ARPlaneGeometry_GetExtent::ReturnValue' has a wrong offset!");

// Function AugmentedReality.ARPlaneGeometry.GetLocalToTrackingTransform
// 0x0030 (0x0030 - 0x0000)
struct ARPlaneGeometry_GetLocalToTrackingTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ARPlaneGeometry_GetLocalToTrackingTransform) == 0x000010, "Wrong alignment on ARPlaneGeometry_GetLocalToTrackingTransform");
static_assert(sizeof(ARPlaneGeometry_GetLocalToTrackingTransform) == 0x000030, "Wrong size on ARPlaneGeometry_GetLocalToTrackingTransform");
static_assert(offsetof(ARPlaneGeometry_GetLocalToTrackingTransform, ReturnValue) == 0x000000, "Member 'ARPlaneGeometry_GetLocalToTrackingTransform::ReturnValue' has a wrong offset!");

// Function AugmentedReality.ARPlaneGeometry.GetLocalToWorldTransform
// 0x0030 (0x0030 - 0x0000)
struct ARPlaneGeometry_GetLocalToWorldTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ARPlaneGeometry_GetLocalToWorldTransform) == 0x000010, "Wrong alignment on ARPlaneGeometry_GetLocalToWorldTransform");
static_assert(sizeof(ARPlaneGeometry_GetLocalToWorldTransform) == 0x000030, "Wrong size on ARPlaneGeometry_GetLocalToWorldTransform");
static_assert(offsetof(ARPlaneGeometry_GetLocalToWorldTransform, ReturnValue) == 0x000000, "Member 'ARPlaneGeometry_GetLocalToWorldTransform::ReturnValue' has a wrong offset!");

}

